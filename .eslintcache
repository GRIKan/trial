[{"D:\\Users\\User\\Desktop\\Σχολη\\11ο εξαμηνο\\Διπλωματικη Εργασια\\Ver1\\trial\\src\\index.js":"1","D:\\Users\\User\\Desktop\\Σχολη\\11ο εξαμηνο\\Διπλωματικη Εργασια\\Ver1\\trial\\src\\reportWebVitals.js":"2","D:\\Users\\User\\Desktop\\Σχολη\\11ο εξαμηνο\\Διπλωματικη Εργασια\\Ver1\\trial\\src\\App.js":"3","D:\\Users\\User\\Desktop\\Σχολη\\11ο εξαμηνο\\Διπλωματικη Εργασια\\ver1\\trial\\src\\index.js":"4","D:\\Users\\User\\Desktop\\Σχολη\\11ο εξαμηνο\\Διπλωματικη Εργασια\\ver1\\trial\\src\\reportWebVitals.js":"5","D:\\Users\\User\\Desktop\\Σχολη\\11ο εξαμηνο\\Διπλωματικη Εργασια\\ver1\\trial\\src\\App.js":"6","D:\\Users\\User\\Desktop\\Σχολη\\11ο εξαμηνο\\Διπλωματικη Εργασια\\Ver1\\trial\\src\\Components\\Sort\\Sure.js":"7","D:\\Users\\User\\Desktop\\Σχολη\\11ο εξαμηνο\\Διπλωματικη Εργασια\\Ver1\\trial\\src\\Components\\Sort\\Thankyou.js":"8","D:\\Users\\User\\Desktop\\Σχολη\\11ο εξαμηνο\\Διπλωματικη Εργασια\\Ver1\\trial\\src\\Components\\Sort\\Create.js":"9","D:\\Users\\User\\Desktop\\Σχολη\\11ο εξαμηνο\\Διπλωματικη Εργασια\\Ver1\\trial\\src\\Components\\Sort\\ButtonToTop.js":"10","D:\\Users\\User\\Desktop\\Σχολη\\11ο εξαμηνο\\Διπλωματικη Εργασια\\Ver1\\trial\\src\\Components\\Sort\\Sidebar.js":"11","D:\\Users\\User\\Desktop\\Σχολη\\11ο εξαμηνο\\Διπλωματικη Εργασια\\Ver1\\trial\\src\\Components\\Sort\\CardInCategory.js":"12","D:\\Users\\User\\Desktop\\Σχολη\\11ο εξαμηνο\\Διπλωματικη Εργασια\\Ver1\\trial\\src\\Components\\Sort\\CardDroppable.js":"13","D:\\Users\\User\\Desktop\\Σχολη\\11ο εξαμηνο\\Διπλωματικη Εργασια\\Ver1\\trial\\src\\Components\\Sort\\Rename.js":"14","D:\\Users\\User\\Desktop\\Σχολη\\11ο εξαμηνο\\Διπλωματικη Εργασια\\Ver1\\trial\\src\\Components\\Sort\\Option.js":"15","D:\\Users\\User\\Desktop\\Σχολη\\11ο εξαμηνο\\Διπλωματικη Εργασια\\Ver1\\trial\\src\\Components\\Sort\\Instructions.js":"16","D:\\Users\\User\\Desktop\\Σχολη\\11ο εξαμηνο\\Διπλωματικη Εργασια\\Ver1\\trial\\src\\Components\\Sort\\CloseCategory.js":"17","D:\\Users\\User\\Desktop\\Σχολη\\11ο εξαμηνο\\Διπλωματικη Εργασια\\Ver1\\trial\\src\\Components\\Sort\\CloseCard.js":"18","D:\\Users\\User\\Desktop\\Σχολη\\11ο εξαμηνο\\Διπλωματικη Εργασια\\Ver1\\trial\\src\\Components\\Sort\\CloseSort.js":"19","D:\\Users\\User\\Desktop\\Σχολη\\11ο εξαμηνο\\Διπλωματικη Εργασια\\Ver1\\trial\\src\\Components\\Sort\\CloseCardList.js":"20","D:\\Users\\User\\Desktop\\Σχολη\\11ο εξαμηνο\\Διπλωματικη Εργασια\\Ver1\\trial\\src\\Components\\Sort\\Comments.js":"21","D:\\Users\\User\\Desktop\\Σχολη\\11ο εξαμηνο\\Διπλωματικη Εργασια\\Ver1\\trial\\src\\Components\\Sort\\Tasks.js":"22","D:\\Users\\User\\Desktop\\Σχολη\\11ο εξαμηνο\\Διπλωματικη Εργασια\\Ver1\\trial\\src\\Components\\Sort\\SortTest.js":"23","D:\\Users\\User\\Desktop\\Σχολη\\11ο εξαμηνο\\Διπλωματικη Εργασια\\Ver1\\trial\\src\\Components\\Sort\\ChangeLanguage.js":"24","D:\\Users\\User\\Desktop\\Σχολη\\11ο εξαμηνο\\Διπλωματικη Εργασια\\Ver1\\trial\\src\\Components\\Sort\\Card.js":"25","D:\\Users\\User\\Desktop\\Σχολη\\11ο εξαμηνο\\Διπλωματικη Εργασια\\Ver1\\trial\\src\\Components\\Sort\\CardList.js":"26","D:\\Users\\User\\Desktop\\Σχολη\\11ο εξαμηνο\\Διπλωματικη Εργασια\\Ver1\\trial\\src\\Components\\Sort\\Category.js":"27","D:\\Users\\User\\Desktop\\Σχολη\\11ο εξαμηνο\\Διπλωματικη Εργασια\\Ver1\\trial\\src\\Components\\Sort\\Sort.js":"28","D:\\Users\\User\\Desktop\\Σχολη\\11ο εξαμηνο\\Διπλωματικη Εργασια\\Ver1\\trial\\src\\Components\\Home\\Home.js":"29","D:\\Users\\User\\Desktop\\Σχολη\\11ο εξαμηνο\\Διπλωματικη Εργασια\\Ver1\\trial\\src\\Components\\Home\\Board.js":"30","D:\\Users\\User\\Desktop\\Σχολη\\11ο εξαμηνο\\Διπλωματικη Εργασια\\Ver1\\trial\\src\\Components\\Home\\Notes.js":"31","D:\\Users\\User\\Desktop\\Σχολη\\11ο εξαμηνο\\Διπλωματικη Εργασια\\Ver1\\trial\\src\\Components\\Home\\LogIn.js":"32","D:\\Users\\User\\Desktop\\Σχολη\\11ο εξαμηνο\\Διπλωματικη Εργασια\\Ver1\\trial\\src\\Components\\Home\\SignUp.js":"33","D:\\Users\\User\\Desktop\\Σχολη\\11ο εξαμηνο\\Διπλωματικη Εργασια\\Ver1\\trial\\src\\Components\\Home\\About.js":"34","D:\\Users\\User\\Desktop\\Σχολη\\11ο εξαμηνο\\Διπλωματικη Εργασια\\Ver1\\trial\\src\\Components\\Home\\Features.js":"35","D:\\Users\\User\\Desktop\\Σχολη\\11ο εξαμηνο\\Διπλωματικη Εργασια\\Ver1\\trial\\src\\Components\\Home\\Forgot.js":"36","D:\\Users\\User\\Desktop\\Σχολη\\11ο εξαμηνο\\Διπλωματικη Εργασια\\Ver1\\trial\\src\\Components\\Dashboard\\Dashboard.js":"37","D:\\Users\\User\\Desktop\\Σχολη\\11ο εξαμηνο\\Διπλωματικη Εργασια\\Ver1\\trial\\src\\Components\\Sort\\HeaderS.js":"38","D:\\Users\\User\\Desktop\\Σχολη\\11ο εξαμηνο\\Διπλωματικη Εργασια\\Ver1\\trial\\src\\Components\\Sort\\PopUpS.js":"39","D:\\Users\\User\\Desktop\\Σχολη\\11ο εξαμηνο\\Διπλωματικη Εργασια\\Ver1\\trial\\src\\Components\\Home\\HeaderH.js":"40","D:\\Users\\User\\Desktop\\Σχολη\\11ο εξαμηνο\\Διπλωματικη Εργασια\\Ver1\\trial\\src\\Components\\Home\\PopUpH.js":"41","D:\\Users\\User\\Desktop\\Σχολη\\11ο εξαμηνο\\Διπλωματικη Εργασια\\Ver1\\trial\\src\\Components\\Dashboard\\HeaderD.js":"42","D:\\Users\\User\\Desktop\\Σχολη\\11ο εξαμηνο\\Διπλωματικη Εργασια\\Ver1\\trial\\src\\Components\\Dashboard\\Experiments.js":"43","D:\\Users\\User\\Desktop\\Σχολη\\11ο εξαμηνο\\Διπλωματικη Εργασια\\Ver1\\trial\\src\\Components\\Dashboard\\Container.js":"44","D:\\Users\\User\\Desktop\\Σχολη\\11ο εξαμηνο\\Διπλωματικη Εργασια\\Ver1\\trial\\src\\Components\\Dashboard\\Settings.js":"45","D:\\Users\\User\\Desktop\\Σχολη\\11ο εξαμηνο\\Διπλωματικη Εργασια\\Ver1\\trial\\src\\Components\\Dashboard\\PopUpD.js":"46","D:\\Users\\User\\Desktop\\Σχολη\\11ο εξαμηνο\\Διπλωματικη Εργασια\\Ver1\\trial\\src\\Components\\Dashboard\\SureD.js":"47","D:\\Users\\User\\Desktop\\Σχολη\\11ο εξαμηνο\\Διπλωματικη Εργασια\\Ver1\\trial\\src\\Components\\Results\\Results.js":"48","D:\\Users\\User\\Desktop\\Σχολη\\11ο εξαμηνο\\Διπλωματικη Εργασια\\Ver1\\trial\\src\\Components\\CreateSort\\Createdit.js":"49","D:\\Users\\User\\Desktop\\Σχολη\\11ο εξαμηνο\\Διπλωματικη Εργασια\\Ver1\\trial\\src\\Components\\CreateSort\\Explore.js":"50","D:\\Users\\User\\Desktop\\Σχολη\\11ο εξαμηνο\\Διπλωματικη Εργασια\\Ver1\\trial\\src\\Components\\CreateSort\\General.js":"51","D:\\Users\\User\\Desktop\\Σχολη\\11ο εξαμηνο\\Διπλωματικη Εργασια\\Ver1\\trial\\src\\Components\\CreateSort\\AddCards.js":"52","D:\\Users\\User\\Desktop\\Σχολη\\11ο εξαμηνο\\Διπλωματικη Εργασια\\Ver1\\trial\\src\\Components\\CreateSort\\AddCategories.js":"53","D:\\Users\\User\\Desktop\\Σχολη\\11ο εξαμηνο\\Διπλωματικη Εργασια\\Ver1\\trial\\src\\Components\\CreateSort\\Options.js":"54","D:\\Users\\User\\Desktop\\Σχολη\\11ο εξαμηνο\\Διπλωματικη Εργασια\\Ver1\\trial\\src\\Components\\CreateSort\\SureC.js":"55","D:\\Users\\User\\Desktop\\Σχολη\\11ο εξαμηνο\\Διπλωματικη Εργασια\\Ver1\\trial\\src\\Components\\Sort\\ChooseSort.js":"56"},{"size":500,"mtime":499162500000,"results":"57","hashOfConfig":"58"},{"size":362,"mtime":499162500000,"results":"59","hashOfConfig":"58"},{"size":1121,"mtime":1672599935008,"results":"60","hashOfConfig":"58"},{"size":500,"mtime":499162500000,"results":"61","hashOfConfig":"62"},{"size":362,"mtime":499162500000,"results":"63","hashOfConfig":"62"},{"size":194,"mtime":1655393062154,"results":"64","hashOfConfig":"62"},{"size":6993,"mtime":1673311913362,"results":"65","hashOfConfig":"58"},{"size":1988,"mtime":1673261092085,"results":"66","hashOfConfig":"58"},{"size":11498,"mtime":1670777274321,"results":"67","hashOfConfig":"58"},{"size":2097,"mtime":1673312503180,"results":"68","hashOfConfig":"58"},{"size":3181,"mtime":1669771468297,"results":"69","hashOfConfig":"58"},{"size":3724,"mtime":1672964993085,"results":"70","hashOfConfig":"58"},{"size":1044,"mtime":1669771388228,"results":"71","hashOfConfig":"58"},{"size":5234,"mtime":1669514173755,"results":"72","hashOfConfig":"58"},{"size":1134,"mtime":1667873470015,"results":"73","hashOfConfig":"58"},{"size":13543,"mtime":1673139897497,"results":"74","hashOfConfig":"58"},{"size":9296,"mtime":1672968264827,"results":"75","hashOfConfig":"58"},{"size":6621,"mtime":1669776906130,"results":"76","hashOfConfig":"58"},{"size":4184,"mtime":1673311565857,"results":"77","hashOfConfig":"58"},{"size":8429,"mtime":1669775697543,"results":"78","hashOfConfig":"58"},{"size":3453,"mtime":1673312623113,"results":"79","hashOfConfig":"58"},{"size":3733,"mtime":1673139795790,"results":"80","hashOfConfig":"58"},{"size":7703,"mtime":1669288733328,"results":"81","hashOfConfig":"58"},{"size":2141,"mtime":1672961610876,"results":"82","hashOfConfig":"58"},{"size":7832,"mtime":1669776995155,"results":"83","hashOfConfig":"58"},{"size":9641,"mtime":1669772916234,"results":"84","hashOfConfig":"58"},{"size":11019,"mtime":1673143789767,"results":"85","hashOfConfig":"58"},{"size":6847,"mtime":1673311139973,"results":"86","hashOfConfig":"58"},{"size":1461,"mtime":1672881811173,"results":"87","hashOfConfig":"58"},{"size":6304,"mtime":1670596523626,"results":"88","hashOfConfig":"58"},{"size":1094,"mtime":1672881764346,"results":"89","hashOfConfig":"58"},{"size":5423,"mtime":1672881865698,"results":"90","hashOfConfig":"58"},{"size":8847,"mtime":1671588086602,"results":"91","hashOfConfig":"58"},{"size":2221,"mtime":1670758419843,"results":"92","hashOfConfig":"58"},{"size":3761,"mtime":1670723559257,"results":"93","hashOfConfig":"58"},{"size":2153,"mtime":1671106332958,"results":"94","hashOfConfig":"58"},{"size":2483,"mtime":1672401925952,"results":"95","hashOfConfig":"58"},{"size":6853,"mtime":1673178494423,"results":"96","hashOfConfig":"58"},{"size":1367,"mtime":1671106699753,"results":"97","hashOfConfig":"58"},{"size":11261,"mtime":1673313199008,"results":"98","hashOfConfig":"58"},{"size":797,"mtime":1671106965426,"results":"99","hashOfConfig":"58"},{"size":3311,"mtime":1673313623146,"results":"100","hashOfConfig":"58"},{"size":3105,"mtime":1673312139226,"results":"101","hashOfConfig":"58"},{"size":1381,"mtime":1672164519611,"results":"102","hashOfConfig":"58"},{"size":10792,"mtime":1671590726851,"results":"103","hashOfConfig":"58"},{"size":1228,"mtime":1672861516272,"results":"104","hashOfConfig":"58"},{"size":1951,"mtime":1672151958410,"results":"105","hashOfConfig":"58"},{"size":5027,"mtime":1673053197414,"results":"106","hashOfConfig":"58"},{"size":2747,"mtime":1672166679307,"results":"107","hashOfConfig":"58"},{"size":1652,"mtime":1672166557214,"results":"108","hashOfConfig":"58"},{"size":7417,"mtime":1672933832528,"results":"109","hashOfConfig":"58"},{"size":13951,"mtime":1673312223566,"results":"110","hashOfConfig":"58"},{"size":13977,"mtime":1673312200989,"results":"111","hashOfConfig":"58"},{"size":4700,"mtime":1672880007446,"results":"112","hashOfConfig":"58"},{"size":1700,"mtime":1672164113905,"results":"113","hashOfConfig":"58"},{"size":5220,"mtime":1673178396467,"results":"114","hashOfConfig":"58"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},"12dlbt5",{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},"tx3nd1",{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"129","messages":"130","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"117"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"117"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174","usedDeprecatedRules":"117"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"201","usedDeprecatedRules":"117"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"224","usedDeprecatedRules":"117"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"227","usedDeprecatedRules":"117"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"230","usedDeprecatedRules":"117"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"237","usedDeprecatedRules":"117"},"D:\\Users\\User\\Desktop\\Σχολη\\11ο εξαμηνο\\Διπλωματικη Εργασια\\Ver1\\trial\\src\\index.js",[],["238","239"],"D:\\Users\\User\\Desktop\\Σχολη\\11ο εξαμηνο\\Διπλωματικη Εργασια\\Ver1\\trial\\src\\reportWebVitals.js",[],"D:\\Users\\User\\Desktop\\Σχολη\\11ο εξαμηνο\\Διπλωματικη Εργασια\\Ver1\\trial\\src\\App.js",[],"D:\\Users\\User\\Desktop\\Σχολη\\11ο εξαμηνο\\Διπλωματικη Εργασια\\ver1\\trial\\src\\index.js",[],["240","241"],"D:\\Users\\User\\Desktop\\Σχολη\\11ο εξαμηνο\\Διπλωματικη Εργασια\\ver1\\trial\\src\\reportWebVitals.js",[],"D:\\Users\\User\\Desktop\\Σχολη\\11ο εξαμηνο\\Διπλωματικη Εργασια\\ver1\\trial\\src\\App.js",[],"D:\\Users\\User\\Desktop\\Σχολη\\11ο εξαμηνο\\Διπλωματικη Εργασια\\Ver1\\trial\\src\\Components\\Sort\\Sure.js",["242"],"import React, { useState } from 'react';\r\nimport { motion } from 'framer-motion';\r\nimport results from '../Data/results.json';\r\n\r\nconst sureVariants = {\r\n    initial: {\r\n        scale: 0\r\n    },\r\n    animate: {\r\n        scale: 1,\r\n        transition: { duration: 0.3 }\r\n    },\r\n    exit: {\r\n        scale: 0, \r\n        transition: { duration: 0.2 }\r\n    }\r\n}\r\n\r\nconst Sure = ( {sure, setSure, categoryinfo, setPop, changelang, cards, cardsInCategory, categories, categoriesOrder,\r\n    setCards, setCardsInCategory, setCategories, setCategoriesOrder,\r\n    setThanks, theid, comments} ) => {\r\n        const [res, setRes] = useState(results);\r\n        // console.log(res);\r\n        \r\n        const renderSure = () => {\r\n            switch(sure) {\r\n                default: return;\r\n                case 1: return (changelang ? \"submit this?\" : \"το υποβάλετε;\");\r\n                case 2: return(\r\n                    <div>\r\n                        {changelang ? \"submit this?\" : \"το υποβάλετε;\"}\r\n                        <br />\r\n                        {changelang ? \"There are\" : \"Υπάρχουν\"} \r\n                        <u> {changelang ? \"unsorted cards\" : \"μη ταξινομημένες κάρτες\"}</u>\r\n                        <span style= {{color: 'red'}}>!!!</span>\r\n                    </div>\r\n                )\r\n                case 3: return (changelang ? \"delete this category?\" : \"διαγράψετε αυτή την κατηγορία;\");\r\n                case 4: return (changelang ? \"delete all category cards?\" : \"διαγράψετε όλες τις κάρτες της κατηγορίας;\");\r\n            };\r\n        };\r\n\r\n        const no = () => {\r\n            setSure(null);\r\n        };\r\n\r\n        const yes = () => {\r\n            if (sure === 1 || sure === 2) {\r\n                const datas= [];\r\n                categoriesOrder.order.map((categoryId) => {\r\n                    const category= categories[categoryId];\r\n                    category.cardId.map(cardId => {\r\n                        cardId= cardsInCategory[cardId];\r\n                        const data1= {card_id: cardId.id, card_name: cardId.name, \r\n                            cat_id: category.id, cat_name: category.name};\r\n                        datas.push(data1);\r\n                        return (cardId);\r\n                    });\r\n                    return (categoryId);\r\n                });\r\n                Object.values(cards).map((card) => {\r\n                    const data1= {card_id: card.id, card_name: card.name, \r\n                        cat_id: \"\", cat_name: \"\"};\r\n                    datas.push(data1);\r\n                    return (card);\r\n                });\r\n                // console.log(datas);\r\n                const result= {res_id: res.length + 1, data: datas, comments: comments,exp_id: theid};\r\n                setRes([...res, result]);\r\n                window.localStorage.removeItem(`${theid}`);\r\n                setThanks(true);\r\n            }\r\n            else if (sure === 3) {\r\n                const category= categoryinfo;\r\n    \r\n                // var newCategoriesOrder= categoriesOrder.order.filter(function(value) { \r\n                //     return !(value === category.id);\r\n                // });\r\n                // setCategoriesOrder({...categoriesOrder, order: newCategoriesOrder});\r\n    \r\n                const newCategories= {...categories};\r\n                delete newCategories[category.id];\r\n                // setCategories({...newCategories});\r\n\r\n                // const theId= +category.id.match(/\\d+/)[0];\r\n                const theLength= Object.values(categoriesOrder)[0].length;\r\n                var theArray= [];\r\n                var newIdsArray= {};\r\n\r\n                for (let i= 0; i < theLength-1; i++) {\r\n                    theArray= [...theArray, Object.values(categoriesOrder)[0][i]];\r\n\r\n                    const newCategoryId= Object.values(categoriesOrder)[0][i];\r\n                    const newCategory= { [newCategoryId] : \r\n                        { id: newCategoryId, name: Object.values(newCategories)[i].name, \r\n                            cardId: Object.values(newCategories)[i].cardId, \r\n                            minimize: Object.values(newCategories)[i].minimize }};\r\n                    newIdsArray= {...newIdsArray, ...newCategory};\r\n                };\r\n                \r\n                setCategoriesOrder({...categoriesOrder, order: theArray});\r\n                setCategories({...categories, ...newIdsArray});\r\n    \r\n                const theCards= Array.from(category.cardId);\r\n                const newCardsInCategory= {...cardsInCategory};\r\n                var newCards= {};\r\n                \r\n                theCards.forEach( (e) => {\r\n                    delete newCardsInCategory[e];\r\n                    \r\n                    newCards= {...newCards, [e]: cardsInCategory[e]};\r\n                });\r\n    \r\n                setCardsInCategory({...newCardsInCategory});\r\n                setCards({...cards, ...newCards});\r\n    \r\n                setPop(6);\r\n            }\r\n            else if (sure === 4) {\r\n                const category= categoryinfo;\r\n\r\n                const newCardId= Array.from(category.cardId);\r\n                const theCards= Array.from(category.cardId);\r\n                        \r\n                newCardId.splice(0, newCardId.length);\r\n                const newCategory= {...category, cardId: newCardId};\r\n                setCategories({...categories, [category.id]: newCategory});\r\n                \r\n                const newCardsInCategory= {...cardsInCategory};\r\n                var newCards= {};\r\n            \r\n                theCards.forEach( (e) => {\r\n                    delete newCardsInCategory[e];\r\n                    \r\n                    newCards= {...newCards, [e]: cardsInCategory[e]};\r\n                });\r\n\r\n                setCardsInCategory({...newCardsInCategory});\r\n                setCards({...cards, ...newCards});\r\n\r\n                setPop(7);\r\n            };\r\n            setSure(null);\r\n        };\r\n\r\n        return(\r\n            <div className= \"sure\">\r\n                <motion.div className= \"surecontainer\" {...sureVariants}>\r\n                    <div className= \"suremessage\">\r\n                        {changelang ? \"Are you sure you want to\" : \"Θέλετε σίγουρα να\"}\r\n                        <br />\r\n                        {renderSure()}\r\n                    </div>\r\n                    <div className= \"surebuttoncontainer\">\r\n                        <button className= \"surebutton\" id= \"sno\" onClick= {no}>\r\n                            {changelang ? \"ΝΟ\" : \"ΟΧΙ\"}\r\n                        </button>\r\n                        <button className= \"surebutton\" id= \"syes\" type= \"submit\" onClick= {yes}>\r\n                            {changelang ? \"Yes\" : \"Ναι\"}\r\n                        </button>\r\n                    </div>\r\n                </motion.div>\r\n            </div>\r\n        );\r\n}\r\n\r\nexport default Sure;","D:\\Users\\User\\Desktop\\Σχολη\\11ο εξαμηνο\\Διπλωματικη Εργασια\\Ver1\\trial\\src\\Components\\Sort\\Thankyou.js",[],"D:\\Users\\User\\Desktop\\Σχολη\\11ο εξαμηνο\\Διπλωματικη Εργασια\\Ver1\\trial\\src\\Components\\Sort\\Create.js",[],"D:\\Users\\User\\Desktop\\Σχολη\\11ο εξαμηνο\\Διπλωματικη Εργασια\\Ver1\\trial\\src\\Components\\Sort\\ButtonToTop.js",[],"D:\\Users\\User\\Desktop\\Σχολη\\11ο εξαμηνο\\Διπλωματικη Εργασια\\Ver1\\trial\\src\\Components\\Sort\\Sidebar.js",[],"D:\\Users\\User\\Desktop\\Σχολη\\11ο εξαμηνο\\Διπλωματικη Εργασια\\Ver1\\trial\\src\\Components\\Sort\\CardInCategory.js",[],"D:\\Users\\User\\Desktop\\Σχολη\\11ο εξαμηνο\\Διπλωματικη Εργασια\\Ver1\\trial\\src\\Components\\Sort\\CardDroppable.js",[],"D:\\Users\\User\\Desktop\\Σχολη\\11ο εξαμηνο\\Διπλωματικη Εργασια\\Ver1\\trial\\src\\Components\\Sort\\Rename.js",[],"D:\\Users\\User\\Desktop\\Σχολη\\11ο εξαμηνο\\Διπλωματικη Εργασια\\Ver1\\trial\\src\\Components\\Sort\\Option.js",[],["243","244"],"D:\\Users\\User\\Desktop\\Σχολη\\11ο εξαμηνο\\Διπλωματικη Εργασια\\Ver1\\trial\\src\\Components\\Sort\\Instructions.js",[],"D:\\Users\\User\\Desktop\\Σχολη\\11ο εξαμηνο\\Διπλωματικη Εργασια\\Ver1\\trial\\src\\Components\\Sort\\CloseCategory.js",[],"D:\\Users\\User\\Desktop\\Σχολη\\11ο εξαμηνο\\Διπλωματικη Εργασια\\Ver1\\trial\\src\\Components\\Sort\\CloseCard.js",[],"D:\\Users\\User\\Desktop\\Σχολη\\11ο εξαμηνο\\Διπλωματικη Εργασια\\Ver1\\trial\\src\\Components\\Sort\\CloseSort.js",["245"],"import React, { useState, useEffect } from 'react';\r\nimport { AnimatePresence } from 'framer-motion';\r\nimport ChangeLanguage from './ChangeLanguage';\r\nimport Tasks from './Tasks';\r\nimport Header from './HeaderS';\r\nimport Instructions from './Instructions';\r\nimport Comments from './Comments';\r\nimport Sure from './Sure';\r\nimport CardList from './CloseCardList';\r\nimport PopUp from './PopUpS';\r\nimport ButtonToTop from './ButtonToTop';\r\nimport Thankyou from './Thankyou';\r\nimport './Sort.css'\r\n\r\nconst Sort = ( {cards, setCards, categories, setCategories, categoriesOrder, setCategoriesOrder, exp} ) => {\r\n    const [cardsInCategory, setCardsInCategory] = useState({});\r\n    \r\n    useEffect(() => {\r\n        window.addEventListener('load', ChangeLanguage);\r\n        // window.localStorage.clear();\r\n        const data= JSON.parse(window.localStorage.getItem(`${exp.exp_id}`));\r\n        if (data !== null) {\r\n            setCardsInCategory(data.cardsInCategory);\r\n            setCategories(data.categories);\r\n            setCategoriesOrder(data.categoriesOrder);\r\n            setComments(data.comments);\r\n        };\r\n    },[exp.exp_id]);\r\n\r\n    const [changelang, setChangelang] = useState(false);\r\n\r\n    const [inDrag, setInDrag] = useState(\"false\");\r\n\r\n    const resetInDrag = () => {\r\n        setInDrag(\"false\");\r\n    };\r\n\r\n    const [tasks, setTasks] = useState(false);\r\n\r\n    const isClose= true;\r\n\r\n    const [instructions, setInstructions] = useState(false);\r\n\r\n    const [dispcomments, setDispComments] = useState(false);\r\n    const [comments, setComments] = useState(\"\");\r\n\r\n    const [sure, setSure] = useState();\r\n    const [categoryinfo, setCategoryInfo] = useState();\r\n\r\n    const [pop, setPop] = useState(0);\r\n\r\n    const [thanks, setThanks] = useState(false);\r\n\r\n    return (\r\n        <div className= \"sort\" onMouseUp= {resetInDrag}>\r\n            {tasks && <Tasks setTasks= {setTasks} setInstructions= {setInstructions} task= {exp.instructions} />}\r\n            <Header changelang= {changelang} setChangelang= {setChangelang} isClose= {isClose} exp= {exp}\r\n                setInstructions= {setInstructions} comments= {comments} setDispComments= {setDispComments} \r\n                setSure= {setSure} setPop= {setPop}\r\n                cards= {cards} cardsInCategory= {cardsInCategory} \r\n                categories= {categories} categoriesOrder= {categoriesOrder} />\r\n            <AnimatePresence>\r\n                {instructions && <Instructions setInstructions= {setInstructions} changelang= {changelang} \r\n                    isClose= {isClose} task= {exp.instructions} />}\r\n                {dispcomments && <Comments setDispComments= {setDispComments} changelang= {changelang}\r\n                    isClose= {isClose} comments= {comments} setComments= {setComments} setPop= {setPop} />}\r\n                {sure && <Sure sure= {sure} setSure= {setSure} categoryinfo= {categoryinfo} setPop= {setPop}\r\n                    changelang= {changelang} cards= {cards} cardsInCategory= {cardsInCategory} \r\n                    categories= {categories}  categoriesOrder= {categoriesOrder} \r\n                    setCards= {setCards} setCardsInCategory= {setCardsInCategory} \r\n                    setCategories= {setCategories} setCategoriesOrder= {setCategoriesOrder} \r\n                    setThanks= {setThanks} theid= {exp.exp_id} comments= {comments} />}\r\n            </AnimatePresence>\r\n            <CardList changelang= {changelang} inDrag= {inDrag} setInDrag= {setInDrag} \r\n                setSure= {setSure} setCategoryInfo= {setCategoryInfo} setPop= {setPop}\r\n                cards= {cards} cardsInCategory= {cardsInCategory} \r\n                categories= {categories}  categoriesOrder= {categoriesOrder} \r\n                setCards= {setCards} setCardsInCategory= {setCardsInCategory} \r\n                setCategories= {setCategories} />\r\n            <AnimatePresence>\r\n                {pop && <PopUp pop= {pop} setPop= {setPop} changelang= {changelang} />}\r\n            </AnimatePresence>\r\n            <ButtonToTop changelang= {changelang} />\r\n            {thanks && <Thankyou changelang= {changelang} bye= {exp.goodbye} />}\r\n        </div> \r\n    );\r\n}\r\n\r\nexport default Sort;","D:\\Users\\User\\Desktop\\Σχολη\\11ο εξαμηνο\\Διπλωματικη Εργασια\\Ver1\\trial\\src\\Components\\Sort\\CloseCardList.js",[],"D:\\Users\\User\\Desktop\\Σχολη\\11ο εξαμηνο\\Διπλωματικη Εργασια\\Ver1\\trial\\src\\Components\\Sort\\Comments.js",[],"D:\\Users\\User\\Desktop\\Σχολη\\11ο εξαμηνο\\Διπλωματικη Εργασια\\Ver1\\trial\\src\\Components\\Sort\\Tasks.js",[],"D:\\Users\\User\\Desktop\\Σχολη\\11ο εξαμηνο\\Διπλωματικη Εργασια\\Ver1\\trial\\src\\Components\\Sort\\SortTest.js",["246"],"D:\\Users\\User\\Desktop\\Σχολη\\11ο εξαμηνο\\Διπλωματικη Εργασια\\Ver1\\trial\\src\\Components\\Sort\\ChangeLanguage.js",[],"D:\\Users\\User\\Desktop\\Σχολη\\11ο εξαμηνο\\Διπλωματικη Εργασια\\Ver1\\trial\\src\\Components\\Sort\\Card.js",[],"D:\\Users\\User\\Desktop\\Σχολη\\11ο εξαμηνο\\Διπλωματικη Εργασια\\Ver1\\trial\\src\\Components\\Sort\\CardList.js",[],"D:\\Users\\User\\Desktop\\Σχολη\\11ο εξαμηνο\\Διπλωματικη Εργασια\\Ver1\\trial\\src\\Components\\Sort\\Category.js",["247"],"import React, { useState, useEffect } from 'react';\r\nimport { Droppable } from 'react-beautiful-dnd';\r\nimport { motion, AnimatePresence } from 'framer-motion';\r\nimport Rename from './Rename.js';\r\nimport CardInCategory from './CardInCategory';\r\nimport Min from '../../Images/min.png';\r\nimport Max from '../../Images/max.png';\r\nimport Edit from '../../Images/edit.png';\r\nimport Delete from '../../Images/delete.png';\r\n\r\nconst droppableVariants = {\r\n    // initial: {\r\n    //     opacity: 0\r\n    // },\r\n    // animate: {\r\n    //     opacity: 1,\r\n    //     transition: {\r\n    //         duration: 1,\r\n    //         when: \"beforeChildren\",\r\n    //         staggerChildren: 1\r\n    //     }\r\n    // }\r\n}\r\n\r\nconst childVariants = {\r\n    // initial: {\r\n    //     opacity: 0\r\n    // },\r\n    // animate: {\r\n    //     opacity: 1,\r\n       \r\n    // }\r\n}\r\n\r\nconst maxVariants = {\r\n    initial: {\r\n        height: '29vh'\r\n    },\r\n    animate: {\r\n        height: '100%'\r\n    },\r\n    transition: { duration: 0.1, type: \"spring\", bounce: 0 },\r\n}\r\n\r\nconst Category = ( {displaydrops, changelang, setSure, setCategoryInfo, setPop, inDrag, setInDrag, card, category, \r\n    cards, cardsInCategory, categories, categoriesOrder, setCards, setCardsInCategory, setCategories} ) => {  \r\n        const [rename, setRename] = useState(false);\r\n        const [inputText, setInputText] = useState(category.name);\r\n        const [red, setRed] = useState(false);\r\n        const [visible, setVisible] = useState(false);\r\n\r\n        const [displayminmax, setDisplayminmax] = useState(category.minimize);\r\n        const [displaymin, setDisplaymin] = useState(!category.minimize);\r\n        const [minimize, setMinimize] = useState(category.minimize);\r\n        const [height, setHeight] = useState(0);\r\n\r\n        document.addEventListener('DOMContentLoaded', function() {\r\n            if (category.cardId.length > 2) {\r\n                    setDisplayminmax(true);\r\n                    setDisplaymin(true);\r\n                };\r\n        });\r\n\r\n        useEffect(() => {\r\n            if (category.cardId.length < 3) {\r\n                setDisplayminmax(false);\r\n                setDisplaymin(false);\r\n                setMinimize(false);\r\n            }\r\n            else if (category.cardId.length >= 3 && !minimize) {\r\n                setDisplayminmax(true);\r\n                setDisplaymin(true);\r\n            };\r\n         }, [category, minimize]);\r\n\r\n        useEffect(() => {\r\n            // console.log('change');\r\n            setDisplaymin(!category.minimize);\r\n            setMinimize(category.minimize);\r\n        }, [categoriesOrder]);\r\n\r\n        document.body.onmousedown= (e) => {\r\n            if (e.target.getAttribute('data-inrename')) {\r\n                    return;\r\n            };\r\n            setRename(false);\r\n        };\r\n\r\n        const minimizeCategoryCardList = (e) => {\r\n            setDisplaymin(false);\r\n            setMinimize(true);\r\n\r\n            const newCategory= {...category};\r\n            newCategory.minimize= true;\r\n            setCategories({...categories, [category.id]: newCategory});\r\n\r\n            setHeight(e.target.parentNode.parentNode.parentNode.childNodes[1].offsetHeight);\r\n        };\r\n        \r\n        const maximizeCategoryCardList = () => {\r\n            setDisplaymin(true);\r\n            setMinimize(false);\r\n\r\n            const newCategory= {...category};\r\n            newCategory.minimize= false;\r\n            setCategories({...categories, [category.id]: newCategory});\r\n        };\r\n        \r\n        const renameCategory = (e) => {\r\n            setRename(true);\r\n            setInputText(category.name);\r\n\r\n            // e.target.parentNode.parentNode.childNodes[1].style.display= 'grid';\r\n            setRed(false);\r\n            setVisible(false);\r\n            // e.target.parentNode.parentNode.childNodes[1].childNodes[0].style.borderColor= 'black';\r\n            // e.target.parentNode.parentNode.childNodes[1].childNodes[0].removeAttribute(\"id\");\r\n            // e.target.parentNode.parentNode.childNodes[1].childNodes[0].select();\r\n            // e.target.parentNode.parentNode.childNodes[1].childNodes[0].focus();\r\n            // e.target.parentNode.parentNode.childNodes[1].childNodes[1].style.display= 'none';\r\n        };\r\n\r\n        const deleteCategory = () => {\r\n            setSure(3);\r\n            setCategoryInfo(category);\r\n        };\r\n\r\n        return (\r\n            <li className= \"category\" data-ismin= {displaymin}>\r\n                <div className= \"categoryheader\" data-ismin= {displaymin}>\r\n                    <div id= \"categoryminimize\">\r\n                        {displayminmax && displaymin &&\r\n                            <img src= {Min} alt= {\"Minimize Icon\"} id= \"minimize\"\r\n                                title= {changelang ? \"Minimize\" : \"Ελαχιστοποίηση\"}\r\n                                onClick= {minimizeCategoryCardList} style= {{width: '16px', height: '16px'}} />}\r\n                        {displayminmax && !displaymin && \r\n                            <img src= {Max} alt= {\"Maximize Icon\"} id= \"maximize\" \r\n                                title= {changelang ? \"Maximize\" : \"Μεγιστοποίηση\"}\r\n                                onClick= {maximizeCategoryCardList} style= {{width: '16px', height: '16px'}} />}\r\n                    </div>\r\n                    <div id= \"categorytitle\">\r\n                        <div id= \"categorytitletext\"\r\n                        title= {(changelang ? \"Rename category: \" : \"Μετονομασία κατηγορίας: \") + category.name} \r\n                            onClick= {renameCategory} >\r\n                            {category.name}\r\n                        </div>\r\n                        <img id= \"categorytitleedit\" src= {Edit} alt= \"Edit Icon\" \r\n                            title= {(changelang ? \"Rename category: \" : \"Μετονομασία κατηγορίας: \") + category.name}\r\n                            onClick= {renameCategory} \r\n                            style= {{width: '21px', height: '16px'}} />\r\n                    </div>\r\n                    {rename && <Rename setRename= {setRename} setPop= {setPop} changelang= {changelang}\r\n                        inputText= {inputText} setInputText= {setInputText}\r\n                        red= {red} setRed= {setRed} visible= {visible} setVisible= {setVisible}\r\n                        category= {category} categories= {categories} setCategories= {setCategories} />}\r\n                    <div id= \"categorydelete\">\r\n                        <img src= {Delete} alt= \"Delete Icon\" \r\n                            title= {changelang ? \"Delete category\" : \"Διαγραφή κατηγορίας: \"}\r\n                            onClick= {deleteCategory} style= {{width: '16px', height: '16px'}} />\r\n                    </div>\r\n                </div>\r\n                <AnimatePresence initial= {minimize}>\r\n                    {!minimize && <motion.div className= \"categorycontainer\" data-ismin= {displaymin} {...maxVariants} >\r\n                        <Droppable droppableId= {category.id}>\r\n                            { (provided, snapshot) => (\r\n                                    <motion.div className= \"categorycardlist\" {...droppableVariants}     \r\n                                        {...provided.droppableProps}\r\n                                        ref= {provided.innerRef}\r\n                                        data-isdraggingover= {snapshot.isDraggingOver} >\r\n                                            {card.map((card, index) => {\r\n                                                return(\r\n                                                    <CardInCategory key= {card.id} displaydrops= {displaydrops}\r\n                                                        changelang= {changelang}\r\n                                                        inDrag= {inDrag} setInDrag= {setInDrag} \r\n                                                        card= {card} category= {category} index= {index} \r\n                                                        cards= {cards} cardsInCategory= {cardsInCategory} \r\n                                                        categories= {categories}\r\n                                                        setCards= {setCards} setCardsInCategory= {setCardsInCategory} \r\n                                                        setCategories= {setCategories} {...childVariants} />\r\n                                                );                  \r\n                                            })}\r\n                                        {provided.placeholder}\r\n                                    </motion.div>\r\n                            )}\r\n                        </Droppable>\r\n                    </motion.div>}\r\n                </AnimatePresence>\r\n                <AnimatePresence>\r\n                    {minimize && <motion.div className= \"categorycontainer\" data-ismin= {displaymin}\r\n                        initial= {{ height: height + 'px' }} \r\n                        animate= {{ height: 'calc(29vh - 26px)' }}\r\n                        transition= {{ duration: 0.2, type: \"spring\", bounce: 0 }} >\r\n                        <Droppable droppableId= {category.id}>\r\n                            { (provided, snapshot) => (\r\n                                    <motion.div className= \"categorycardlistminimized\" id= \"categoryscrollbar\"\r\n                                        {...droppableVariants}\r\n                                        {...provided.droppableProps}\r\n                                        ref= {provided.innerRef}\r\n                                        data-isdraggingover= {snapshot.isDraggingOver} >\r\n                                            {card.map((card, index) => {\r\n                                                return(\r\n                                                    <CardInCategory key= {card.id} displaydrops= {displaydrops}\r\n                                                        changelang= {changelang}\r\n                                                        inDrag= {inDrag} setInDrag= {setInDrag} \r\n                                                        card= {card} category= {category} index= {index} \r\n                                                        cards= {cards} cardsInCategory= {cardsInCategory} \r\n                                                        categories= {categories}\r\n                                                        setCards= {setCards} setCardsInCategory= {setCardsInCategory} \r\n                                                        setCategories= {setCategories} />\r\n                                                );                  \r\n                                            })}\r\n                                        {provided.placeholder}\r\n                                    </motion.div>\r\n                            )}\r\n                        </Droppable>\r\n                    </motion.div>}\r\n                </AnimatePresence>\r\n            </li>\r\n        );\r\n}\r\n\r\nexport default Category;","D:\\Users\\User\\Desktop\\Σχολη\\11ο εξαμηνο\\Διπλωματικη Εργασια\\Ver1\\trial\\src\\Components\\Sort\\Sort.js",[],"D:\\Users\\User\\Desktop\\Σχολη\\11ο εξαμηνο\\Διπλωματικη Εργασια\\Ver1\\trial\\src\\Components\\Home\\Home.js",[],"D:\\Users\\User\\Desktop\\Σχολη\\11ο εξαμηνο\\Διπλωματικη Εργασια\\Ver1\\trial\\src\\Components\\Home\\Board.js",[],"D:\\Users\\User\\Desktop\\Σχολη\\11ο εξαμηνο\\Διπλωματικη Εργασια\\Ver1\\trial\\src\\Components\\Home\\Notes.js",[],"D:\\Users\\User\\Desktop\\Σχολη\\11ο εξαμηνο\\Διπλωματικη Εργασια\\Ver1\\trial\\src\\Components\\Home\\LogIn.js",[],"D:\\Users\\User\\Desktop\\Σχολη\\11ο εξαμηνο\\Διπλωματικη Εργασια\\Ver1\\trial\\src\\Components\\Home\\SignUp.js",[],"D:\\Users\\User\\Desktop\\Σχολη\\11ο εξαμηνο\\Διπλωματικη Εργασια\\Ver1\\trial\\src\\Components\\Home\\About.js",[],"D:\\Users\\User\\Desktop\\Σχολη\\11ο εξαμηνο\\Διπλωματικη Εργασια\\Ver1\\trial\\src\\Components\\Home\\Features.js",[],"D:\\Users\\User\\Desktop\\Σχολη\\11ο εξαμηνο\\Διπλωματικη Εργασια\\Ver1\\trial\\src\\Components\\Home\\Forgot.js",[],"D:\\Users\\User\\Desktop\\Σχολη\\11ο εξαμηνο\\Διπλωματικη Εργασια\\Ver1\\trial\\src\\Components\\Dashboard\\Dashboard.js",[],"D:\\Users\\User\\Desktop\\Σχολη\\11ο εξαμηνο\\Διπλωματικη Εργασια\\Ver1\\trial\\src\\Components\\Sort\\HeaderS.js",[],"D:\\Users\\User\\Desktop\\Σχολη\\11ο εξαμηνο\\Διπλωματικη Εργασια\\Ver1\\trial\\src\\Components\\Sort\\PopUpS.js",[],"D:\\Users\\User\\Desktop\\Σχολη\\11ο εξαμηνο\\Διπλωματικη Εργασια\\Ver1\\trial\\src\\Components\\Home\\HeaderH.js",["248"],"import React, { useEffect, useState } from 'react';\r\nimport { Link, useLocation } from 'react-router-dom';\r\nimport { AnimatePresence, motion } from 'framer-motion';\r\nimport Logo from '../../Images/logo2.png';\r\nimport Greek from '../../Images/greekflag.png';\r\nimport UK from '../../Images/ukflag.png';\r\nimport Option from '../../Images/yellowfull.png';\r\nimport Choice from '../../Images/yellowflip.png';\r\nimport Button from '../../Images/greenfull.png';\r\nimport Connect from '../../Images/greenflip.png';\r\nimport Menu from '../../Images/menu.png';\r\nimport Close from '../../Images/close.png';\r\n\r\nconst dispSidemenuVariants= {\r\n    initial: {\r\n        opacity: 0\r\n    },\r\n    animate: {\r\n        opacity: 1,\r\n        transition: { duration: 0.3 }\r\n    },\r\n    exit: {\r\n        opacity: 0,\r\n        transition: { duration: 0.2 }\r\n    }\r\n}\r\n\r\nconst sidemenuVariants= {\r\n    initial: {\r\n        x: -600\r\n    },\r\n    animate: {\r\n        x: 0\r\n    },\r\n    exit: {\r\n        x: -600\r\n    },\r\n    transition: { duration: 0.3 }\r\n}\r\n\r\nconst Header = () => {\r\n    const [changelang, setChangelang] = useState(false);\r\n    const [dispbutton, setDispbutton] = useState(true);\r\n    const [dispmenu, setDispmenu] = useState(false);\r\n    \r\n    const [options, setOptions] = useState([false, false, false, false]);\r\n    var location= useLocation();\r\n\r\n    window.addEventListener('resize', function() {\r\n        if (document.querySelector('.sidemenu')) {\r\n            if (window.getComputedStyle(document.querySelector('.sidemenu'), null).display === 'none') {\r\n                setDispbutton(true);\r\n                setDispmenu(false);\r\n            };\r\n        };\r\n    });\r\n\r\n    useEffect(() => {\r\n        const newOptions= Array.from(options);\r\n        if (location.pathname === '/') {\r\n            for (const i in newOptions) {\r\n                if (i === '0') {\r\n                    newOptions[i]= true;\r\n                }\r\n                else {\r\n                    newOptions[i]= false;\r\n                };\r\n            };\r\n        }\r\n        else if (location.pathname === '/about') {\r\n            for (const i in newOptions) {\r\n                if (i === '1') {\r\n                    newOptions[i]= true;\r\n                }\r\n                else {\r\n                    newOptions[i]= false;\r\n                };\r\n            };\r\n        }\r\n        else if (location.pathname === '/features') {\r\n            for (const i in newOptions) {\r\n                if (i === '2') {\r\n                    newOptions[i]= true;\r\n                }\r\n                else {\r\n                    newOptions[i]= false;\r\n                };\r\n            };\r\n        }\r\n        else if (location.pathname === '/login') {\r\n            for (const i in newOptions) {\r\n                if (i === '3') {\r\n                    newOptions[i]= true;\r\n                }\r\n                else {\r\n                    newOptions[i]= false;\r\n                };\r\n            };\r\n        }\r\n        else {\r\n            for (const i in newOptions) {\r\n                newOptions[i]= false;\r\n            };\r\n        };\r\n        setOptions(newOptions);\r\n    },[location.pathname])\r\n\r\n    const changedisp = (e) => {\r\n        const newOptions= Array.from(options);\r\n        for (const i in newOptions) {\r\n            if (!(i === e.target.parentNode.id)) {\r\n                newOptions[i]= false;\r\n            };\r\n        };\r\n        setOptions(newOptions);\r\n\r\n        if(e.target.className === \"smalltextright\") {\r\n            closeMenu();\r\n        };\r\n    };\r\n\r\n    const changesrc = (e) => {\r\n        const newOptions= Array.from(options);\r\n        newOptions[e.target.parentNode.id]= true;\r\n        setOptions(newOptions);\r\n    };\r\n\r\n    const changeback = (e) => {\r\n        if (!(location.pathname === e.target.parentNode.parentNode.pathname)) {\r\n            const newOptions= Array.from(options);\r\n            newOptions[e.target.parentNode.id]= false;\r\n            setOptions(newOptions);\r\n        };\r\n    };\r\n\r\n    const changeLanguage = () => {\r\n        changelang ? setChangelang(false) : setChangelang(true);\r\n    };\r\n\r\n    const showMenu = () => {\r\n        setDispbutton(false);\r\n        setDispmenu(true);\r\n    };\r\n\r\n    const closeMenu = () => {\r\n        setDispmenu(false);\r\n        setDispbutton(true);\r\n    };\r\n\r\n    return (\r\n        <div className= \"header h\">\r\n            <div id= \"logo\">\r\n                <Link to= \"/\">\r\n                    <img src= {Logo} alt= \"Logo Icon\" id= \"icon\" onClick= {closeMenu} />\r\n                </Link>\r\n            </div>\r\n            <div className= \"headeroptions\">\r\n                <Link to= \"/\">\r\n                    <div className= \"smallpostit\" id= \"0\" onPointerEnter= {changesrc} onPointerLeave= {changeback}\r\n                        onClick= {changedisp} >\r\n                        {options[0] ? \r\n                            <img src= {Choice} alt= \"Home Icon\" /> \r\n                        : \r\n                            <img src= {Option} alt= \"Home Icon\" />\r\n                        }\r\n                        <div className= \"smalltext\">\r\n                                Αρχική\r\n                        </div>\r\n                    </div>\r\n                </Link>\r\n                <Link to= \"/about\">\r\n                    <div className= \"smallpostit\" id= \"1\" onPointerEnter= {changesrc} onPointerLeave= {changeback}\r\n                        onClick= {changedisp} >\r\n                        {options[1] ? \r\n                            <img src= {Choice} alt= \"About Icon\" /> \r\n                        : \r\n                            <img src= {Option} alt= \"About Icon\" />\r\n                        }\r\n                        <div className= \"smalltext\">\r\n                                Σχετικά\r\n                        </div>\r\n                    </div>\r\n                </Link>\r\n                <Link to= \"/features\">\r\n                    <div className= \"smallpostit\" id= \"2\" onPointerEnter= {changesrc} onPointerLeave= {changeback}\r\n                        onClick= {changedisp} >\r\n                        {options[2] ? \r\n                            <img src= {Choice} alt= \"Features Icon\" /> \r\n                        : \r\n                            <img src= {Option} alt= \"Features Icon\" />\r\n                        }\r\n                        <div className= \"smalltext\">\r\n                            Λειτουργίες\r\n                        </div>\r\n                    </div>\r\n                </Link>\r\n            </div>\r\n            <div className= \"buttonheaderh\">\r\n                <Link to= \"/login\">\r\n                    <div className= \"smallpostit\" id= \"3\" onPointerEnter= {changesrc} onPointerLeave= {changeback} \r\n                        style= {{fontWeight: 'bold'}} onClick= {changedisp} >\r\n                        {options[3] ? \r\n                            <img src= {Connect} alt= \"Login Icon\" /> \r\n                        : \r\n                            <img src= {Button} alt= \"Login Icon\" />\r\n                        }\r\n                        <div className= \"smalltext\">\r\n                            Σύνδεση\r\n                        </div>\r\n                    </div>\r\n                </Link>\r\n            </div>\r\n            <span id= \"languageh\" onClick= {changeLanguage} lang= {changelang ? \"greek\" : \"english\"} \r\n                title= \"Change Language\" >\r\n                {changelang ? \r\n                    <img src= {Greek} alt= \"Greek Flag Icon\" lang= \"greek\" /> \r\n                : \r\n                    <img src= {UK} alt= \"UK Flag Icon\" lang= \"english\" />\r\n                }\r\n            </span>\r\n            <AnimatePresence>\r\n                {dispbutton && <motion.img src= {Menu} alt= \"Menu Icon\" className= \"menu\" onClick= {showMenu} \r\n                    {...dispSidemenuVariants} />}\r\n            </AnimatePresence>\r\n            <AnimatePresence>\r\n                {dispmenu && <motion.div className= \"sidemenu\" {...sidemenuVariants}>\r\n                    <img src= {Close} alt= \"Close Icon\" onClick= {closeMenu} />\r\n                    <Link to= \"/login\">\r\n                        <div className= \"smallpostitright\" id= \"3\" style= {{margin: '20px' , fontWeight: 'bold'}}\r\n                            onPointerEnter= {changesrc} onPointerLeave= {changeback} onClick= {changedisp} >\r\n                                {options[3] ? \r\n                                    <img src= {Connect} alt= \"Login Icon\" /> \r\n                                : \r\n                                    <img src= {Button} alt= \"Login Icon\" />\r\n                                }\r\n                                <div className= \"smalltextright\">\r\n                                    Σύνδεση\r\n                                </div>\r\n                        </div>\r\n                    </Link>\r\n                    <div className= \"headeroptionsright\">\r\n                        <Link to= \"/\">\r\n                            <div className= \"smallpostitright\" id= \"0\" \r\n                                onPointerEnter= {changesrc} onPointerLeave= {changeback} onClick= {changedisp} >\r\n                                    {options[0] ? \r\n                                        <img src= {Choice} alt= \"Home Icon\" /> \r\n                                    : \r\n                                        <img src= {Option} alt= \"Home Icon\" />\r\n                                    }\r\n                                    <div className= \"smalltextright\">\r\n                                        Αρχική\r\n                                    </div>\r\n                            </div>\r\n                        </Link>\r\n                        <Link to= \"/about\">\r\n                            <div className= \"smallpostitright\" id= \"1\" \r\n                                onPointerEnter= {changesrc} onPointerLeave= {changeback} onClick= {changedisp} >\r\n                                    {options[1] ? \r\n                                        <img src= {Choice} alt= \"About Icon\" /> \r\n                                    : \r\n                                        <img src= {Option} alt= \"About Icon\" />\r\n                                    }\r\n                                    <div className= \"smalltextright\">\r\n                                        Σχετικά\r\n                                    </div>\r\n                            </div>\r\n                        </Link>\r\n                        <Link to= \"/features\">\r\n                            <div className= \"smallpostitright\" id= \"2\" \r\n                                onPointerEnter= {changesrc} onPointerLeave= {changeback} onClick= {changedisp} >\r\n                                    {options[2] ? \r\n                                        <img src= {Choice} alt= \"Features Icon\" /> \r\n                                    : \r\n                                        <img src= {Option} alt= \"Features Icon\" />\r\n                                    }\r\n                                    <div className= \"smalltextright\">\r\n                                        Λειτουργίες\r\n                                    </div>\r\n                            </div>\r\n                        </Link>\r\n                    </div>\r\n                </motion.div> }\r\n            </AnimatePresence>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header;","D:\\Users\\User\\Desktop\\Σχολη\\11ο εξαμηνο\\Διπλωματικη Εργασια\\Ver1\\trial\\src\\Components\\Home\\PopUpH.js",[],"D:\\Users\\User\\Desktop\\Σχολη\\11ο εξαμηνο\\Διπλωματικη Εργασια\\Ver1\\trial\\src\\Components\\Dashboard\\HeaderD.js",[],"D:\\Users\\User\\Desktop\\Σχολη\\11ο εξαμηνο\\Διπλωματικη Εργασια\\Ver1\\trial\\src\\Components\\Dashboard\\Experiments.js",[],"D:\\Users\\User\\Desktop\\Σχολη\\11ο εξαμηνο\\Διπλωματικη Εργασια\\Ver1\\trial\\src\\Components\\Dashboard\\Container.js",[],"D:\\Users\\User\\Desktop\\Σχολη\\11ο εξαμηνο\\Διπλωματικη Εργασια\\Ver1\\trial\\src\\Components\\Dashboard\\Settings.js",[],"D:\\Users\\User\\Desktop\\Σχολη\\11ο εξαμηνο\\Διπλωματικη Εργασια\\Ver1\\trial\\src\\Components\\Dashboard\\PopUpD.js",[],"D:\\Users\\User\\Desktop\\Σχολη\\11ο εξαμηνο\\Διπλωματικη Εργασια\\Ver1\\trial\\src\\Components\\Dashboard\\SureD.js",[],"D:\\Users\\User\\Desktop\\Σχολη\\11ο εξαμηνο\\Διπλωματικη Εργασια\\Ver1\\trial\\src\\Components\\Results\\Results.js",[],"D:\\Users\\User\\Desktop\\Σχολη\\11ο εξαμηνο\\Διπλωματικη Εργασια\\Ver1\\trial\\src\\Components\\CreateSort\\Createdit.js",[],"D:\\Users\\User\\Desktop\\Σχολη\\11ο εξαμηνο\\Διπλωματικη Εργασια\\Ver1\\trial\\src\\Components\\CreateSort\\Explore.js",[],"D:\\Users\\User\\Desktop\\Σχολη\\11ο εξαμηνο\\Διπλωματικη Εργασια\\Ver1\\trial\\src\\Components\\CreateSort\\General.js",["249","250"],"import React, { useEffect, useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst General = ( {exp, setExp, expIndex, exps, setExps, setPop, created, setCreated} ) => {\r\n    // console.log(exp);\r\n    const [inputName, setInputName] = useState(exp.name);\r\n    const [redName, setRedName] = useState(false);\r\n    const [redType, setRedType] = useState(false);\r\n\r\n    const [req, setReq] = useState(false);\r\n    \r\n    const [publish, setPublish] = useState(exp.publish);\r\n\r\n    const inputNameHandler = (e) => {\r\n        setInputName(e.target.value);\r\n        setRedName(false);\r\n    };\r\n\r\n    const changeBorder = () => {\r\n        setRedType(false);\r\n    };\r\n\r\n    const toPublish = () => {\r\n        setPublish(!publish);\r\n        document.getElementById(\"datestart\").value= \"\";\r\n        document.getElementById(\"datestop\").value= \"\";\r\n        setExp({...exp, datestart: \"\", datestop: \"\", publish: !publish});\r\n    };\r\n\r\n    const check = (e) => {\r\n        if (inputName === \"\") {\r\n            e.preventDefault();\r\n            setRedName(true);\r\n        };\r\n        var el = document.querySelector('select[name=\"type\"] option:checked').value;\r\n        if (el === \"\") {\r\n            e.preventDefault();\r\n            setRedType(true);\r\n        };\r\n        const d1= document.getElementById(\"datestart\").value;\r\n        const d2= document.getElementById(\"datestop\").value;\r\n        if ((d1 !== \"\") || (d2 !== \"\")) {\r\n            setReq(true);\r\n        }\r\n        else {\r\n            setReq(false);\r\n        };\r\n        if (publish) {\r\n            e.preventDefault();\r\n        }\r\n        else {\r\n            var today = new Date();\r\n            var date = today.getDate()+'/'+(today.getMonth()+1)+'/'+today.getFullYear();\r\n            var time = today.getHours()+':'+today.getMinutes()+':'+today.getSeconds();\r\n            var dateTime= date + ', '+ time;\r\n            setExp({...exp, name: inputName, type: document.getElementById(\"type\").value, datemod: dateTime,\r\n                datestart: document.getElementById(\"datestart\").value,\r\n                datestop: document.getElementById(\"datestop\").value});\r\n        };\r\n    };\r\n    \r\n    const navigate= useNavigate();\r\n    \r\n    const changedata = (e) => {\r\n        e.preventDefault();\r\n        const newExps= Array.from(exps);\r\n        if (created) {\r\n            newExps.push(exp);\r\n            setExps(newExps);\r\n\r\n            setPop(5);\r\n            setCreated(false);\r\n            window.history.replaceState('', '', `/dashboard/${exp.exp_id}`);\r\n            navigate(`/dashboard/${exp.exp_id}`);\r\n        }\r\n        else {\r\n            newExps[expIndex]= exp;\r\n            setExps(newExps);\r\n\r\n            setPop(6);\r\n        };\r\n    };\r\n    \r\n    useEffect(() => {\r\n        if (publish) {\r\n            document.getElementById('explink').href= `http://localhost:3000/sort/${exp.exp_id}`;\r\n        };\r\n        const newExps= Array.from(exps);\r\n        newExps[expIndex]= exp;\r\n        setExps(newExps);\r\n    }, [publish, exp.exp_id]);\r\n\r\n    useEffect(() => {\r\n        if (exp.datestart && exp.datestop) {\r\n            var today= new Date();\r\n            var date= today.getFullYear()+'-'+('0'+(today.getMonth()+1)).slice(-2)+'-'+('0'+today.getDate()).slice(-2);\r\n            var time= ('0'+today.getHours()).slice(-2)+':'+('0'+today.getMinutes()).slice(-2);\r\n            var dateTime= date + 'T'+ time;\r\n            console.log(dateTime);\r\n            if ((dateTime > exp.datestart) && (dateTime < exp.datestop)) {\r\n                setPublish(true);\r\n                setExp({...exp, publish: true});\r\n            };\r\n            const interval= setInterval(() => {\r\n                var today= new Date();\r\n                var date= today.getFullYear()+'-'+('0'+(today.getMonth()+1)).slice(-2)+'-'+('0'+today.getDate()).slice(-2);\r\n                var time= ('0'+today.getHours()).slice(-2)+':'+('0'+today.getMinutes()).slice(-2);\r\n                var dateTime= date + 'T'+ time;\r\n                console.log(dateTime);\r\n                if ((dateTime > exp.datestart) && (dateTime < exp.datestop)) {\r\n                    setPublish(true);\r\n                    setExp({...exp, publish: true});\r\n                }\r\n                else {\r\n                    setPublish(false);\r\n                    setExp({...exp, publish: false});\r\n                    clearInterval(interval);\r\n                };\r\n            }, 1000);\r\n            return () => clearInterval(interval);\r\n        };\r\n    },[exp.datestart, exp.datestop]);\r\n\r\n    return (\r\n        <form className= \"general\" id= \"containerdscrollbar\" onSubmit= {changedata}>\r\n            <div className= \"infoside\">\r\n                {publish && <div id= \"isonline\">\r\n                    Όταν το πείραμα είναι online δεν μπορεί να τροποποιηθεί!\r\n                </div>}\r\n                <div className= \"infocat\">\r\n                    <div className= \"infoname\">Όνομα πειράματος:</div>\r\n                    <input className= \"expform\" type= \"text\"\r\n                        title= {inputName} value= {inputName} autoComplete= \"off\" disabled= {publish}\r\n                        onChange= {inputNameHandler} style= {{borderColor: (redName? 'red' : 'black')}} />\r\n                </div>\r\n                <div className= \"infocat\">\r\n                    <div className= \"infotype\">Είδος Card Sorting:</div>\r\n                    <select name=\"type\" className= \"expform\" id=\"type\" defaultValue= {exp.type} required \r\n                        disabled= {publish} style= {{borderColor: (redType? 'red' : 'black')}} onChange= {changeBorder} >\r\n                            <option value=\"\" disabled hidden></option>\r\n                            <option value=\"open\">Open</option>\r\n                            <option value=\"close\">Close</option>\r\n                    </select>\r\n                </div>\r\n            </div>\r\n            <div className= \"generateside\">\r\n            <div className= \"infocat\">\r\n                <div className= \"infostart\">Έναρξη:</div>\r\n                    <input className= \"expform\" type= \"datetime-local\" id= \"datestart\" defaultValue= {exp.datestart} \r\n                        disabled= {publish} required= {req} />\r\n                <div className= \"infostop\">Λήξη:</div>\r\n                    <input className= \"expform\" type= \"datetime-local\" id= \"datestop\" defaultValue= {exp.datestop} \r\n                        disabled= {publish} required= {req} />\r\n                </div>\r\n                <div className= \"infocat alt\">\r\n                    <div id= \"alttext\">Εναλλακτικά:</div>\r\n                    <button type= \"button\" id= \"publishbutton\" onClick= {toPublish} disabled= {created}\r\n                        style= {{backgroundColor: (publish ? \"Green\" : \"Red\")}}>\r\n                        {publish ? \"Απενεργοποίηση Link\" : \"Ενεργοποίηση Link\"}\r\n                    </button>\r\n                </div>\r\n                {publish && <a href= \"link\" target=\"_blank\" rel=\"noopener noreferrer\" id= \"explink\">\r\n                    www.sort-it.com/sort/\r\n                    {exp.exp_id}\r\n                </a>}\r\n            </div>\r\n            <div className= \"generalbutton\">\r\n                <input type= \"submit\" className= \"savebutton\" value= \"Αποθήκευση\" onClick= {check} />\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default General;","D:\\Users\\User\\Desktop\\Σχολη\\11ο εξαμηνο\\Διπλωματικη Εργασια\\Ver1\\trial\\src\\Components\\CreateSort\\AddCards.js",["251","252"],"import React, { useEffect, useState } from 'react';\r\nimport { AnimatePresence } from 'framer-motion';\r\nimport Sure from './SureC';\r\nimport Add from '../../Images/add.png';\r\nimport WhiteAdd from '../../Images/whiteadd.png';\r\nimport Delete from '../../Images/delete.png';\r\nimport Plus from '../../Images/plus.png';\r\nimport WhitePlus from '../../Images/whiteplus.png';\r\nimport x from '../../Images/x.png';\r\n\r\nconst AddCards = ( {exp, setExp, expIndex, exps, setExps, setPop} ) => {\r\n    var thecards= Object.values(exp.cards).map(card => {\r\n        // console.log(card);\r\n        return card;\r\n    });\r\n    const [cards, setCards] = useState(thecards);\r\n    const [duplicate, setDuplicate] = useState(false);\r\n    const [empty, setEmpty] = useState(false);\r\n    const exist= \": Η κάρτα υπάρχει ήδη!\"\r\n    // console.log(cards);\r\n\r\n    const [dispImportCards, setDispImportCards] = useState(false);\r\n    const [inputCards, setInputCards] = useState(\"\");\r\n    const [redCards, setRedCards] = useState(false);\r\n\r\n    const [over1, setOver1] = useState(false);\r\n    const [over2, setOver2] = useState(false);\r\n\r\n    const [dispAddaCard, setDispAddaCard] = useState(false);\r\n    const [inputCard, setInputCard] = useState(\"\");\r\n    const [redCard, setRedCard] = useState(false);\r\n\r\n    const [sure, setSure] = useState();\r\n\r\n    document.body.onpointerdown= (e) => {\r\n        if (e.target.getAttribute('data-inadd')) {\r\n            return;\r\n        };\r\n        setInputCard(\"\");\r\n        setRedCard(false);\r\n        setDispAddaCard(false);\r\n    };\r\n    \r\n    useEffect(() => {\r\n        // console.log(cards);\r\n        \r\n        var finalcards= {};\r\n        var finalcard= {};\r\n        cards.map((item, index) => {\r\n            finalcard=  {[`card-${index + 1}`] : \r\n                { id: `card-${index + 1}`, name: item.name}};\r\n            finalcards= {...finalcards, ...finalcard};\r\n            return finalcards;\r\n        });\r\n\r\n        // console.log(finalcards);\r\n        var today = new Date();\r\n        var date = today.getDate()+'/'+(today.getMonth()+1)+'/'+today.getFullYear();\r\n        var time = today.getHours()+':'+today.getMinutes()+':'+today.getSeconds();\r\n        var dateTime= date + ', '+ time;\r\n        setExp({...exp, datemod: dateTime, cards: finalcards});\r\n    }, [cards]);\r\n\r\n    useEffect(() => {\r\n        const newExps= Array.from(exps);\r\n        newExps[expIndex]= exp;\r\n        setExps(newExps);\r\n    }, [exp]);\r\n\r\n    const importCards = () => {\r\n        setDispImportCards(true);\r\n    };\r\n\r\n    const inputCardsHandler = (e) => {\r\n        setInputCards(e.target.value);\r\n        setRedCards(false);\r\n        setDuplicate(false);\r\n        setEmpty(false);\r\n    };\r\n\r\n    const reset = () => {\r\n        setInputCard(inputCard.replace(exist, \"\"));\r\n    };\r\n\r\n    const checkall = (e) => {\r\n        var importedCards= inputCards.replace(/\\s/g,'').split(\",\");\r\n        // console.log(importedCards);\r\n        if (importedCards.includes('')) {\r\n            e.preventDefault();\r\n            setRedCards(true);\r\n            setEmpty(true);\r\n        }\r\n        else if ((new Set(importedCards)).size !== importedCards.length) {\r\n            e.preventDefault();\r\n            setRedCards(true);\r\n            setDuplicate(true);\r\n        }\r\n        else {\r\n            var newCards= [];\r\n            importedCards.map((item, index) => {\r\n                var newCard= { id: `card-${index + 1}`, name: item};\r\n                newCards= [...newCards, newCard];\r\n                return newCards;\r\n            });\r\n            setCards(newCards);\r\n        };\r\n    };\r\n\r\n    const addtheCards = (e) => {\r\n        e.preventDefault();\r\n        setInputCards(\"\");\r\n        setDispImportCards(false);\r\n        \r\n        const newExps= Array.from(exps);\r\n        newExps[expIndex]= exp;\r\n        setExps(newExps);\r\n        \r\n        setPop(8);\r\n    };\r\n\r\n    const cancelImport = () => {\r\n        setDispImportCards(false);\r\n        setInputCards(\"\");\r\n        setRedCards(false);\r\n        setDuplicate(false);\r\n        setEmpty(false);\r\n    };\r\n\r\n    const deleteAll = () => {\r\n        if (!exp.publish) {\r\n            setSure(1);\r\n        };\r\n    };\r\n\r\n    const addaCard = () => {\r\n        setDispAddaCard(true);\r\n    };\r\n\r\n    const inputCardHandler = (e) => {\r\n        setInputCard(e.target.value);\r\n        setRedCard(false);\r\n    };\r\n\r\n    const check = (e) => {\r\n        if ((inputCard === \"\")) {\r\n            e.preventDefault();\r\n            setRedCard(true);\r\n        }\r\n        else {\r\n            if (redCard) {\r\n                e.preventDefault();\r\n                setInputCard(inputCard.replace(exist,'') + exist);\r\n            }\r\n            else {\r\n                var checkValues= [];\r\n                cards.map((card) => {\r\n                    return checkValues= [...checkValues, card.name];\r\n                });\r\n                if (checkValues.includes(inputCard)) {\r\n                    e.preventDefault();\r\n                    setRedCard(true);\r\n                    e.target.parentNode.childNodes[0].blur();\r\n                    setInputCard(inputCard + exist);\r\n                }\r\n                else {\r\n                    const newCard= {id: `card-${cards.length + 1}`, name: inputCard};\r\n                    setCards([...cards, newCard]);\r\n                };\r\n            }\r\n        };\r\n    };\r\n\r\n    const addtheCard = (e) => {\r\n        e.preventDefault();\r\n        setInputCard(\"\");\r\n        setDispAddaCard(false);\r\n        \r\n        const newExps= Array.from(exps);\r\n        newExps[expIndex]= exp;\r\n        setExps(newExps);\r\n\r\n        setPop(7);\r\n    };\r\n\r\n    const updateStates = () => {\r\n        var el1 = document.querySelector('input[name=\"randomizecards\"]:checked');\r\n        var el2 = document.querySelector('input[name=\"unsorted\"]:checked');\r\n        var rand= true;\r\n        var unsort= false;\r\n        if (el1 === null) {\r\n            rand= false;\r\n        }\r\n        else {\r\n            rand= true;\r\n        };\r\n        if (el2 === null) {\r\n            unsort= false;\r\n        }\r\n        else {\r\n            unsort= true;\r\n        };\r\n        var today = new Date();\r\n        var date = today.getDate()+'/'+(today.getMonth()+1)+'/'+today.getFullYear();\r\n        var time = today.getHours()+':'+today.getMinutes()+':'+today.getSeconds();\r\n        var dateTime= date + ', '+ time;\r\n        setExp({...exp, datemod: dateTime, randomizecards: rand, unsorted: unsort});\r\n    };\r\n\r\n    const updatetheStates = (e) => {\r\n        e.preventDefault();\r\n\r\n        const newExps= Array.from(exps);\r\n        newExps[expIndex]= exp;\r\n        setExps(newExps);\r\n\r\n        setPop(9);\r\n    };\r\n\r\n    const deleteCard = (index) => {\r\n        if (!exp.publish) {\r\n            const theNew= [];\r\n            const newCards= Array.from(cards);\r\n            newCards.splice(index, 1);\r\n            newCards.map((item, index) => {\r\n                theNew.push({id: `card-${index + 1}`, name: item.name});\r\n                return item;\r\n            });\r\n            setCards(theNew);\r\n    \r\n            setPop(4);\r\n        };\r\n    };\r\n\r\n    return (\r\n        <div className= \"addcards\" id= \"containerdscrollbar\">\r\n            <div className= \"cardsside\">\r\n                <div className= \"cardsheader\">\r\n                    <button className= \"cardsbutton\" id= \"importcards\" onClick= {importCards}\r\n                        onMouseOver= {() => setOver1(true)} onMouseOut= {() => setOver1(false)} disabled= {exp.publish} >\r\n                            <span>Ανέβασμα</span>\r\n                            <img src= {(over1 && !exp.publish)? Add : WhiteAdd} alt= \"Add Multiple Icon\" />\r\n                    </button>\r\n                    <div id= \"totalcards\">\r\n                        #\r\n                        <span id= \"totalcardstext\" >\r\n                            No:&nbsp;\r\n                        </span>\r\n                        {cards.length}\r\n                        <div className= \"iconhover\" onClick= {deleteAll} data-isdisabled= {exp.publish} \r\n                            title= \"Διαγραφή όλων\">\r\n                                <img src= {Delete} alt= \"Delete Icon\" />\r\n                        </div>\r\n                    </div>\r\n                    <button className= \"cardsbutton\" id= \"addcards\" onClick= {addaCard} data-inadd= {true}\r\n                        onMouseOver= {() => setOver2(true)} onMouseOut= {() => setOver2(false)} disabled= {exp.publish} >\r\n                            <span>Προσθήκη</span>\r\n                            <img src= {(over2 && !exp.publish)? Plus : WhitePlus} alt= \"Add Icon\" />\r\n                    </button>\r\n                </div>\r\n                <div className= \"cardsbody\" id= \"containerdscrollbar\">\r\n                    {dispImportCards && <form className= \"importcards\" onSubmit= {addtheCards}>\r\n                        <div className= \"importcardscontainer\">\r\n                            <div id= \"importcardsinfo\">\r\n                                Προσθέστε τα ονόματα καρτών διαχωρισμένα με&nbsp;\r\n                                <span style= {{fontWeight: \"bold\"}}>\r\n                                    κόμματα\r\n                                </span>.\r\n                                <br/>\r\n                                <span style= {{fontWeight: \"bold\"}}>\r\n                                    ΠΡΟΣΟΧΗ:&nbsp;\r\n                                </span>\r\n                                Οι κάρτες αυτές θα αντικαταστήσουν τις υπάρχουσες!\r\n                            </div>\r\n                            <textarea className= \"taskstextarea\" id= \"containerdscrollbar\" \r\n                                placeholder= \"π.χ.: Κάρτα1, Κάρτα2, Κάρτα3, κλπ...\" value= {inputCards} \r\n                                autoComplete= \"off\" autoFocus= \"on\" onChange= {inputCardsHandler} \r\n                                style= {{color: (redCards? 'red' : 'black'), borderColor: (redCards? 'red' : 'black')}} >\r\n                            </textarea>\r\n                            {duplicate && <div id= \"duplicated\">\r\n                                Υπάρχουν διπλότυπα ονόματα καρτών!\r\n                            </div>}\r\n                            {empty && <div id= \"duplicated\">\r\n                                Υπάρχουν κενές κάρτες!\r\n                            </div>}\r\n                            <div className= \"importcardsbuttons\">\r\n                                <input type= \"submit\" className= \"importcardsbutton\" id= \"savecardsbutton\" \r\n                                    value= \"Αποθήκευση\" onClick= {checkall} />\r\n                                <button type= \"button\" className= \"importcardsbutton\" id= \"cancelimport\" \r\n                                    onClick= {cancelImport} >\r\n                                    Ακύρωση\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                    </form>}\r\n                    {dispAddaCard && <form className= \"addacard\" data-inadd= {true} onSubmit= {addtheCard}>\r\n                        <input className= \"expform\" type= \"text\" title= {inputCard} value= {inputCard} \r\n                            autoComplete= \"off\" autoFocus= \"on\" onChange= {inputCardHandler} onClick= {reset}\r\n                            style= {{color: (redCard? 'red' : 'black'), borderColor: (redCard? 'red' : 'black')}} data-inadd= {true} />\r\n                        <input type= \"submit\" className= \"savecardbutton\" value= \"Αποθήκευση\" onClick= {check} \r\n                            data-inadd= {true} />\r\n                    </form>}\r\n                    {cards.map((card, index) => {\r\n                        return (\r\n                            <div key= {card.id} className= \"addedcard\">\r\n                                <span>{card.name}</span>\r\n                                <div id= \"deletecardicon\" onClick= {() => deleteCard(index)} title= \"Διαγραφή κάρτας\"\r\n                                    data-isdisabled= {exp.publish} >\r\n                                        <img src= {x} alt= \"Delete Card Icon\" />\r\n                                </div>\r\n                            </div>\r\n                        )\r\n                    })}\r\n                </div>\r\n            </div>       \r\n            <div className= \"settingsside\">\r\n                <form className= \"settingscontainer\" onSubmit= {updatetheStates}>\r\n                    <div className= \"settingscheckbox\">\r\n                        <input type=\"checkbox\" id=\"randomizecards\" name=\"randomizecards\" value=\"randomizecards\" \r\n                                defaultChecked= {exp.randomizecards} disabled= {exp.publish} />\r\n                        <label htmlFor= \"randomizecards\">\r\n                            Εμφάνιση σειράς καρτών σε τυχαία σειρά.\r\n                        </label>\r\n                    </div>\r\n                    <div className= \"settingscheckbox\">\r\n                        <input type=\"checkbox\" id=\"unsorted\" name=\"unsorted\" value=\"unsorted\" \r\n                                defaultChecked= {exp.unsorted} disabled= {exp.publish} />\r\n                        <label htmlFor= \"unsorted\">\r\n                            Να επιτρέπονται μη ταξινομημένες κάρτες.\r\n                        </label>\r\n                    </div>\r\n                    <input type= \"submit\" className= \"savecardbutton\" value= \"Ενημέρωση\" onClick= {updateStates} \r\n                        disabled= {exp.publish} />\r\n                </form>\r\n            </div>\r\n            <AnimatePresence>\r\n                {sure && <Sure setCards= {setCards} sure= {sure} setSure= {setSure} setPop= {setPop} />}\r\n            </AnimatePresence>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddCards;","D:\\Users\\User\\Desktop\\Σχολη\\11ο εξαμηνο\\Διπλωματικη Εργασια\\Ver1\\trial\\src\\Components\\CreateSort\\AddCategories.js",["253","254"],"import React, { useEffect, useState } from 'react';\r\nimport { AnimatePresence } from 'framer-motion';\r\nimport Sure from './SureC';\r\nimport Add from '../../Images/add.png';\r\nimport WhiteAdd from '../../Images/whiteadd.png';\r\nimport Delete from '../../Images/delete.png';\r\nimport Plus from '../../Images/plus.png';\r\nimport WhitePlus from '../../Images/whiteplus.png';\r\nimport x from '../../Images/x.png';\r\n\r\nconst AddCategories = ( {exp, setExp, expIndex, exps, setExps, setPop} ) => {\r\n    var thecategories= Object.values(exp.categories).map(category => {\r\n        // console.log(category);\r\n        return category;\r\n    });\r\n    const [categories, setCategories] = useState(thecategories);\r\n    const [duplicate, setDuplicate] = useState(false);\r\n    const [empty, setEmpty] = useState(false);\r\n    const exist= \": Η κατηγορία υπάρχει ήδη!\"\r\n    // console.log(categories);\r\n\r\n    const [dispImportCategories, setDispImportCategories] = useState(false);\r\n    const [inputCategories, setInputCategories] = useState(\"\");\r\n    const [redCategories, setRedCategories] = useState(false);\r\n\r\n    const [over1, setOver1] = useState(false);\r\n    const [over2, setOver2] = useState(false);\r\n\r\n    const [dispAddaCategory, setDispAddaCategory] = useState(false);\r\n    const [inputCategory, setInputCategory] = useState(\"\");\r\n    const [redCategory, setRedCategory] = useState(false);\r\n\r\n    const [sure, setSure] = useState();\r\n\r\n    document.body.onpointerdown= (e) => {\r\n        if (e.target.getAttribute('data-inadd')) {\r\n            return;\r\n        };\r\n        setInputCategory(\"\");\r\n        setRedCategory(false);\r\n        setDispAddaCategory(false);\r\n    };\r\n    \r\n    useEffect(() => {\r\n        // console.log(categories);\r\n        \r\n        var finalcategory= {};\r\n        var finalcategories= {};\r\n        categories.map((item, index) => {\r\n            finalcategory=  {[`category-${index + 1}`] : \r\n                { id: `category-${index + 1}`, name: item.name}};\r\n            finalcategories= {...finalcategories, ...finalcategory};\r\n            return finalcategories;\r\n        });\r\n\r\n        // console.log(finalcategories);\r\n        var today = new Date();\r\n        var date = today.getDate()+'/'+(today.getMonth()+1)+'/'+today.getFullYear();\r\n        var time = today.getHours()+':'+today.getMinutes()+':'+today.getSeconds();\r\n        var dateTime= date + ', '+ time;\r\n        setExp({...exp, datemod: dateTime, categories: finalcategories});\r\n    }, [categories]);\r\n\r\n    useEffect(() => {\r\n        const newExps= Array.from(exps);\r\n        newExps[expIndex]= exp;\r\n        setExps(newExps);\r\n    }, [exp]);\r\n\r\n    const importCategories = () => {\r\n        setDispImportCategories(true);\r\n    };\r\n\r\n    const inputCategoriesHandler = (e) => {\r\n        setInputCategories(e.target.value);\r\n        setRedCategories(false);\r\n        setDuplicate(false);\r\n        setEmpty(false);\r\n    };\r\n\r\n    const reset = () => {\r\n        setInputCategory(inputCategory.replace(exist, \"\"));\r\n    };\r\n\r\n    const checkall = (e) => {\r\n        var importedCategories= inputCategories.replace(/\\s/g,'').split(\",\");\r\n        // console.log(importedCategories);\r\n        if (importedCategories.includes('')) {\r\n            e.preventDefault();\r\n            setRedCategories(true);\r\n            setEmpty(true);\r\n        }\r\n        else if ((new Set(importedCategories)).size !== importedCategories.length) {\r\n            e.preventDefault();\r\n            setRedCategories(true);\r\n            setDuplicate(true);\r\n        }\r\n        else {\r\n            var newCategories= [];\r\n            importedCategories.map((item, index) => {\r\n                var newCategory= { id: `category-${index + 1}`, name: item};\r\n                newCategories= [...newCategories, newCategory];\r\n                return newCategories;\r\n            });\r\n            setCategories(newCategories);\r\n        };\r\n    };\r\n\r\n    const addtheCategories = (e) => {\r\n        e.preventDefault();\r\n        setInputCategories(\"\");\r\n        setDispImportCategories(false);\r\n        \r\n        const newExps= Array.from(exps);\r\n        newExps[expIndex]= exp;\r\n        setExps(newExps);\r\n        \r\n        setPop(8);\r\n    };\r\n\r\n    const cancelImport = () => {\r\n        setDispImportCategories(false);\r\n        setInputCategories(\"\");\r\n        setRedCategories(false);\r\n        setDuplicate(false);\r\n        setEmpty(false);\r\n    };\r\n\r\n    const deleteAll = () => {\r\n        if (!exp.publish) {\r\n            setSure(2);\r\n        };\r\n    };\r\n\r\n    const addaCategory = () => {\r\n        setDispAddaCategory(true);\r\n    };\r\n\r\n    const inputCategoryHandler = (e) => {\r\n        setInputCategory(e.target.value);\r\n        setRedCategory(false);\r\n    };\r\n\r\n    const check = (e) => {\r\n        if ((inputCategory === \"\")) {\r\n            e.preventDefault();\r\n            setRedCategory(true);\r\n        }\r\n        else {\r\n            if (redCategory) {\r\n                e.preventDefault();\r\n                setInputCategory(inputCategory.replace(exist,'') + exist);\r\n            }\r\n            else {\r\n                var checkValues= [];\r\n                categories.map((category) => {\r\n                    return checkValues= [...checkValues, category.name];\r\n                });\r\n                if (checkValues.includes(inputCategory)) {\r\n                    e.preventDefault();\r\n                    setRedCategory(true);\r\n                    e.target.parentNode.childNodes[0].blur();\r\n                    setInputCategory(inputCategory + exist);\r\n                }\r\n                else {\r\n                    const newCategory= {id: `category-${categories.length + 1}`, name: inputCategory};\r\n                    // console.log(newCard);\r\n                    setCategories([...categories, newCategory]);\r\n                };\r\n            }\r\n        };\r\n    };\r\n\r\n    const addtheCategory = (e) => {\r\n        e.preventDefault();\r\n        setInputCategory(\"\");\r\n        setDispAddaCategory(false);\r\n        \r\n        const newExps= Array.from(exps);\r\n        newExps[expIndex]= exp;\r\n        setExps(newExps);\r\n\r\n        setPop(7);\r\n    };\r\n\r\n    const updateStates = () => {\r\n        var el = document.querySelector('input[name=\"randomizecards\"]:checked');\r\n        var rand= true;\r\n        if (el === null) {\r\n            rand= false;\r\n        }\r\n        else {\r\n            rand= true;\r\n        };\r\n        var today = new Date();\r\n        var date = today.getDate()+'/'+(today.getMonth()+1)+'/'+today.getFullYear();\r\n        var time = today.getHours()+':'+today.getMinutes()+':'+today.getSeconds();\r\n        var dateTime= date + ', '+ time;\r\n        setExp({...exp, datemod: dateTime, randomizecategories: rand});\r\n    };\r\n\r\n    const updatetheStates = (e) => {\r\n        e.preventDefault();\r\n\r\n        const newExps= Array.from(exps);\r\n        newExps[expIndex]= exp;\r\n        setExps(newExps);\r\n\r\n        setPop(9);\r\n    };\r\n\r\n    const deleteCategory = (index) => {\r\n        if (!exp.publish) {\r\n            const theNew= [];\r\n            const newCategories= Array.from(categories);\r\n            newCategories.splice(index, 1);\r\n            newCategories.map((item, index) => {\r\n                theNew.push({id: `category-${index + 1}`, name: item.name});\r\n                return item;\r\n            });\r\n            setCategories(theNew);\r\n    \r\n            setPop(4);\r\n        };\r\n    };\r\n\r\n    return (\r\n        <div className= \"addcards\" id= \"containerdscrollbar\">\r\n            <div className= \"cardsside\">\r\n                <div className= \"cardsheader\">\r\n                    <button className= \"cardsbutton\" id= \"importcards\" onClick= {importCategories}\r\n                        onMouseOver= {() => setOver1(true)} onMouseOut= {() => setOver1(false)} disabled= {exp.publish} >\r\n                            <span>Ανέβασμα</span>\r\n                            <img src= {(over1 && !exp.publish)? Add : WhiteAdd} alt= \"Add Multiple Icon\" />\r\n                    </button>\r\n                    <div id= \"totalcards\">\r\n                        #\r\n                        <span id= \"totalcardstext\" >\r\n                            No:&nbsp;\r\n                        </span>\r\n                        {categories.length}\r\n                        <div className= \"iconhover\" onClick= {deleteAll} data-isdisabled= {exp.publish} \r\n                            title= \"Διαγραφή όλων\" >\r\n                                <img src= {Delete} alt= \"Delete Icon\" />\r\n                        </div>\r\n                    </div>\r\n                    <button className= \"cardsbutton\" id= \"addcards\" onClick= {addaCategory} data-inadd= {true}\r\n                        onMouseOver= {() => setOver2(true)} onMouseOut= {() => setOver2(false)} disabled= {exp.publish} >\r\n                            <span>Προσθήκη</span>\r\n                            <img src= {(over2 && !exp.publish)? Plus : WhitePlus} alt= \"Add Icon\" />\r\n                    </button>\r\n                </div>\r\n                <div className= \"cardsbody\" id= \"containerdscrollbar\">\r\n                    {dispImportCategories && <form className= \"importcards\" onSubmit= {addtheCategories}>\r\n                        <div className= \"importcardscontainer\">\r\n                            <div id= \"importcardsinfo\">\r\n                                Προσθέστε τα ονόματα κατηγοριών διαχωρισμένα με&nbsp;\r\n                                <span style= {{fontWeight: \"bold\"}}>\r\n                                    κόμματα\r\n                                </span>.\r\n                                <br/>\r\n                                <span style= {{fontWeight: \"bold\"}}>\r\n                                    ΠΡΟΣΟΧΗ:&nbsp;\r\n                                </span>\r\n                                Οι κατηγορίες αυτές θα αντικαταστήσουν τις υπάρχουσες!\r\n                            </div>\r\n                            <textarea className= \"taskstextarea\" id= \"containerdscrollbar\" \r\n                                placeholder= \"π.χ.: Κάρτα1, Κάρτα2, Κάρτα3, κλπ...\" value= {inputCategories} \r\n                                autoComplete= \"off\" autoFocus= \"on\" onChange= {inputCategoriesHandler} \r\n                                style= {{color: (redCategories? 'red' : 'black'), \r\n                                    borderColor: (redCategories? 'red' : 'black')}} >\r\n                            </textarea>\r\n                            {duplicate && <div id= \"duplicated\">\r\n                                Υπάρχουν διπλότυπα ονόματα κατηγοριών!\r\n                            </div>}\r\n                            {empty && <div id= \"duplicated\">\r\n                                Υπάρχουν κενές κατηγορίες!\r\n                            </div>}\r\n                            <div className= \"importcardsbuttons\">\r\n                                <input type= \"submit\" className= \"importcardsbutton\" id= \"savecardsbutton\" \r\n                                    value= \"Αποθήκευση\" onClick= {checkall} />\r\n                                <button type= \"button\" className= \"importcardsbutton\" id= \"cancelimport\" \r\n                                    onClick= {cancelImport} >\r\n                                    Ακύρωση\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                    </form>}\r\n                    {dispAddaCategory && <form className= \"addacard\" data-inadd= {true} onSubmit= {addtheCategory}>\r\n                        <input className= \"expform\" type= \"text\" title= {inputCategory} value= {inputCategory} \r\n                            autoComplete= \"off\" autoFocus= \"on\" onChange= {inputCategoryHandler} onClick= {reset}\r\n                            style= {{color: (redCategory? 'red' : 'black'), borderColor: (redCategory? 'red' : 'black')}} data-inadd= {true} />\r\n                        <input type= \"submit\" className= \"savecardbutton\" value= \"Αποθήκευση\" onClick= {check} \r\n                            data-inadd= {true} />\r\n                    </form>}\r\n                    {categories.map((category, index) => {\r\n                        return (\r\n                            <div key= {category.id} className= \"addedcard\">\r\n                                <span>{category.name}</span>\r\n                                <div id= \"deletecardicon\" onClick= {() => deleteCategory(index)} \r\n                                    title= \"Διαγραφή κατηγορίας\" data-isdisabled= {exp.publish} >\r\n                                        <img src= {x} alt= \"Delete Card Icon\" />\r\n                                </div>\r\n                            </div>\r\n                        )\r\n                    })}\r\n                </div>\r\n            </div>       \r\n            <div className= \"settingsside\">\r\n                <form className= \"settingscontainer\" onSubmit= {updatetheStates}>\r\n                    <div className= \"settingscheckbox\">\r\n                        <input type=\"checkbox\" id=\"randomizecards\" name=\"randomizecards\" value=\"randomizecards\" \r\n                                defaultChecked= {exp.randomizecategories} disabled= {exp.publish} />\r\n                        <label htmlFor= \"randomizecards\">\r\n                            Εμφάνιση σειράς κατηγοριών σε τυχαία σειρά.\r\n                        </label>\r\n                    </div>\r\n                    <input type= \"submit\" className= \"savecardbutton\" value= \"Ενημέρωση\" onClick= {updateStates} \r\n                        disabled= {exp.publish} />\r\n                </form>\r\n            </div>\r\n            <AnimatePresence>\r\n                {sure && <Sure setCategories= {setCategories} sure= {sure} setSure= {setSure} setPop= {setPop} />}\r\n            </AnimatePresence>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddCategories;","D:\\Users\\User\\Desktop\\Σχολη\\11ο εξαμηνο\\Διπλωματικη Εργασια\\Ver1\\trial\\src\\Components\\CreateSort\\Options.js",[],"D:\\Users\\User\\Desktop\\Σχολη\\11ο εξαμηνο\\Διπλωματικη Εργασια\\Ver1\\trial\\src\\Components\\CreateSort\\SureC.js",[],"D:\\Users\\User\\Desktop\\Σχολη\\11ο εξαμηνο\\Διπλωματικη Εργασια\\Ver1\\trial\\src\\Components\\Sort\\ChooseSort.js",["255"],"import React, { useEffect, useState } from 'react';\r\nimport { Navigate, Route, Routes, useParams } from 'react-router-dom';\r\nimport Sort from './Sort';\r\nimport CloseSort from './CloseSort';\r\nimport experiments from '../Data/experiments.json';\r\n\r\nconst ChooseSort = () => {\r\n    const { id } = useParams();\r\n    // console.log({id});\r\n    const exp= experiments.find(item => item.exp_id === id);\r\n\r\n    var thecards= Object.values(exp.cards).map(card => {\r\n        return card;\r\n    });\r\n    const [cards, setCards] = useState(exp.cards);\r\n    \r\n    var thecategories= Object.values(exp.categories).map(category => {\r\n        return category;\r\n    });\r\n    var allthecategories= {};\r\n    var thecategory= {};\r\n    thecategories.map((item, index) => {\r\n        thecategory=  {[`category-${index + 1}`] : { id: `category-${index + 1}`, name: item.name, cardId: [], minimize: false}};\r\n        allthecategories= {...allthecategories, ...thecategory};\r\n        return thecategories;\r\n    });\r\n    const [categories, setCategories] = useState(allthecategories);\r\n    const [categoriesOrder, setCategoriesOrder] = useState({ order: [] });\r\n    \r\n    var theorder= [];\r\n\r\n    // useEffect(() => {\r\n    //     console.log('pig');\r\n    //     if (exp.datestart && exp.datestop) {\r\n    //         var today= new Date();\r\n    //         var date= today.getFullYear()+'-'+('0'+(today.getMonth()+1)).slice(-2)+'-'+('0'+today.getDate()).slice(-2);\r\n    //         var time= ('0'+today.getHours()).slice(-2)+':'+('0'+today.getMinutes()).slice(-2);\r\n    //         var dateTime= date + 'T'+ time;\r\n    //         console.log(dateTime);\r\n    //         if ((dateTime <= exp.datestart) || (dateTime >= exp.datestop)) {\r\n    //             window.location.pathname= \"/home\";\r\n    //         };\r\n    //         const interval= setInterval(() => {\r\n    //             var today= new Date();\r\n    //             var date= today.getFullYear()+'-'+('0'+(today.getMonth()+1)).slice(-2)+'-'+('0'+today.getDate()).slice(-2);\r\n    //             var time= ('0'+today.getHours()).slice(-2)+':'+('0'+today.getMinutes()).slice(-2);\r\n    //             var dateTime= date + 'T'+ time;\r\n    //             console.log(dateTime);\r\n    //             if ((dateTime <= exp.datestart) || (dateTime >= exp.datestop)) {\r\n    //                 window.location.pathname= \"/home\";\r\n    //             };\r\n    //         }, 1000);\r\n    //         return () => clearInterval(interval);\r\n    //     };\r\n    // },[exp.datestart, exp.datestop]);\r\n\r\n    if ((exp === undefined) || (exp.publish === false)) {\r\n        window.location.pathname= \"/home\";\r\n    };\r\n\r\n    useEffect(() => {\r\n        const data= JSON.parse(window.localStorage.getItem(`${exp.exp_id}`));\r\n        if (exp.randomizecards === true) {\r\n            RandomCards();\r\n        };\r\n        if (exp.randomizecategories === true) {\r\n            RandomCategories();\r\n        };\r\n        if (exp.type === 'close') {\r\n            thecategories.map((item, index) => {\r\n                theorder.push(`category-${index + 1}`);\r\n                return theorder;\r\n            });\r\n            setCategoriesOrder({...categoriesOrder, order: theorder});\r\n        };\r\n        if (data !== null) {\r\n            setCards(data.cards);\r\n            if (exp.type === 'close') {\r\n                setCategories(data.categories);\r\n                setCategoriesOrder(data.categoriesOrder);\r\n            };\r\n        };\r\n    },[]);\r\n\r\n    const RandomCards = () => {\r\n        let shuffled = thecards.map(value => ({ value, sort: Math.random() })).sort((a, b) => a.sort - b.sort).map(({ value }) => value);\r\n        var finalcards= {};\r\n        var finalcard= {};\r\n    \r\n        // console.log(shuffled);\r\n        shuffled.map((item, index) => {\r\n            finalcard=  {[`card-${index + 1}`] : { id: `card-${index + 1}`, name: item.name}};\r\n            finalcards= {...finalcards, ...finalcard};\r\n            return finalcards;\r\n        });\r\n        setCards(finalcards);\r\n    };\r\n\r\n    const RandomCategories = () => {\r\n        let shuffled = thecategories.map(value => ({ value, sort: Math.random() })).sort((a, b) => a.sort - b.sort).map(({ value }) => value);\r\n        var finalcategories= {};\r\n        var finalcategory= {};\r\n    \r\n        // console.log(shuffled);\r\n        shuffled.map((item, index) => {\r\n            finalcategory=  {[`category-${index + 1}`] : { id: `category-${index + 1}`, name: item.name, cardId: [], minimize: false}};\r\n            finalcategories= {...finalcategories, ...finalcategory};\r\n            return finalcategories;\r\n        });\r\n        setCategories(finalcategories);\r\n    };\r\n\r\n    // console.log(cards);\r\n\r\n    // console.log(exp.publish);\r\n\r\n    return (\r\n        <Routes>\r\n            <Route path= \"/\" element= {(exp.type === 'open') ? \r\n                <Sort cards= {cards} setCards= {setCards} exp= {exp} /> : \r\n                <CloseSort cards= {cards} setCards= {setCards} categories= {categories} setCategories= {setCategories} \r\n                    categoriesOrder= {categoriesOrder} setCategoriesOrder= {setCategoriesOrder} exp= {exp} />} />\r\n            <Route path=\"*\" element= {<Navigate to=\"/\" replace />} />\r\n        </Routes>\r\n    )\r\n}\r\n\r\nexport default ChooseSort;",{"ruleId":"256","replacedBy":"257"},{"ruleId":"258","replacedBy":"259"},{"ruleId":"256","replacedBy":"260"},{"ruleId":"258","replacedBy":"261"},{"ruleId":"262","severity":1,"message":"263","line":130,"column":21,"nodeType":"264","messageId":"265","endLine":130,"endColumn":29},{"ruleId":"256","replacedBy":"266"},{"ruleId":"258","replacedBy":"267"},{"ruleId":"268","severity":1,"message":"269","line":28,"column":7,"nodeType":"270","endLine":28,"endColumn":19,"suggestions":"271"},{"ruleId":"272","severity":1,"message":"273","line":1,"column":27,"nodeType":"264","messageId":"274","endLine":1,"endColumn":36},{"ruleId":"268","severity":1,"message":"275","line":80,"column":12,"nodeType":"270","endLine":80,"endColumn":29,"suggestions":"276"},{"ruleId":"268","severity":1,"message":"277","line":106,"column":7,"nodeType":"270","endLine":106,"endColumn":26,"suggestions":"278"},{"ruleId":"268","severity":1,"message":"279","line":91,"column":8,"nodeType":"270","endLine":91,"endColumn":29,"suggestions":"280"},{"ruleId":"268","severity":1,"message":"281","line":122,"column":7,"nodeType":"270","endLine":122,"endColumn":36,"suggestions":"282"},{"ruleId":"268","severity":1,"message":"281","line":62,"column":8,"nodeType":"270","endLine":62,"endColumn":15,"suggestions":"283"},{"ruleId":"268","severity":1,"message":"284","line":68,"column":8,"nodeType":"270","endLine":68,"endColumn":13,"suggestions":"285"},{"ruleId":"268","severity":1,"message":"281","line":62,"column":8,"nodeType":"270","endLine":62,"endColumn":20,"suggestions":"286"},{"ruleId":"268","severity":1,"message":"284","line":68,"column":8,"nodeType":"270","endLine":68,"endColumn":13,"suggestions":"287"},{"ruleId":"268","severity":1,"message":"288","line":83,"column":7,"nodeType":"270","endLine":83,"endColumn":9,"suggestions":"289"},"no-native-reassign",["290"],"no-negated-in-lhs",["291"],["290"],["291"],"no-redeclare","'newCards' is already defined.","Identifier","redeclared",["290"],["291"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'setCategories' and 'setCategoriesOrder'. Either include them or remove the dependency array. If 'setCategories' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["292"],"no-unused-vars","'useEffect' is defined but never used.","unusedVar","React Hook useEffect has a missing dependency: 'category.minimize'. Either include it or remove the dependency array. If 'setDisplaymin' needs the current value of 'category.minimize', you can also switch to useReducer instead of useState and read 'category.minimize' in the reducer.",["293"],"React Hook useEffect has a missing dependency: 'options'. Either include it or remove the dependency array.",["294"],"React Hook useEffect has missing dependencies: 'exp', 'expIndex', 'exps', and 'setExps'. Either include them or remove the dependency array. If 'setExps' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["295"],"React Hook useEffect has missing dependencies: 'exp' and 'setExp'. Either include them or remove the dependency array. If 'setExp' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["296"],["297"],"React Hook useEffect has missing dependencies: 'expIndex', 'exps', and 'setExps'. Either include them or remove the dependency array. If 'setExps' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["298"],["299"],["300"],"React Hook useEffect has missing dependencies: 'RandomCards', 'RandomCategories', 'categoriesOrder', 'exp.exp_id', 'exp.randomizecards', 'exp.randomizecategories', 'exp.type', 'thecategories', and 'theorder'. Either include them or remove the dependency array. You can also do a functional update 'setCategoriesOrder(c => ...)' if you only need 'categoriesOrder' in the 'setCategoriesOrder' call.",["301"],"no-global-assign","no-unsafe-negation",{"desc":"302","fix":"303"},{"desc":"304","fix":"305"},{"desc":"306","fix":"307"},{"desc":"308","fix":"309"},{"desc":"310","fix":"311"},{"desc":"312","fix":"313"},{"desc":"314","fix":"315"},{"desc":"316","fix":"317"},{"desc":"314","fix":"318"},{"desc":"319","fix":"320"},"Update the dependencies array to be: [exp.exp_id, setCategories, setCategoriesOrder]",{"range":"321","text":"322"},"Update the dependencies array to be: [categoriesOrder, category.minimize]",{"range":"323","text":"324"},"Update the dependencies array to be: [location.pathname, options]",{"range":"325","text":"326"},"Update the dependencies array to be: [publish, exp.exp_id, exps, expIndex, exp, setExps]",{"range":"327","text":"328"},"Update the dependencies array to be: [exp, exp.datestart, exp.datestop, setExp]",{"range":"329","text":"330"},"Update the dependencies array to be: [cards, exp, setExp]",{"range":"331","text":"332"},"Update the dependencies array to be: [exp, expIndex, exps, setExps]",{"range":"333","text":"334"},"Update the dependencies array to be: [categories, exp, setExp]",{"range":"335","text":"336"},{"range":"337","text":"334"},"Update the dependencies array to be: [RandomCards, RandomCategories, categoriesOrder, exp.exp_id, exp.randomizecards, exp.randomizecategories, exp.type, thecategories, theorder]",{"range":"338","text":"339"},[1121,1133],"[exp.exp_id, setCategories, setCategoriesOrder]",[2581,2598],"[categoriesOrder, category.minimize]",[3102,3121],"[location.pathname, options]",[2992,3013],"[publish, exp.exp_id, exps, expIndex, exp, setExps]",[4471,4500],"[exp, exp.datestart, exp.datestop, setExp]",[2278,2285],"[cards, exp, setExp]",[2423,2428],"[exp, expIndex, exps, setExps]",[2460,2472],"[categories, exp, setExp]",[2610,2615],[3422,3424],"[RandomCards, RandomCategories, categoriesOrder, exp.exp_id, exp.randomizecards, exp.randomizecategories, exp.type, thecategories, theorder]"]